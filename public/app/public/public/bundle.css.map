{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../Route.svelte",
    "../Router.svelte",
    "../App.svelte",
    "../Credits.svelte",
    "../UserForm.svelte",
    "../UserMenu.svelte",
    "../Welcome.svelte",
    "../CharacterCreator.svelte",
    "../CharacterScore.svelte",
    "../CharacterTemplate.svelte",
    "../ActionEditor.svelte",
    "../CRUDEditor.svelte",
    "../ExitEditor.svelte",
    "../ScriptsEditor.svelte",
    "../Toolbar.svelte",
    "../Game.svelte",
    "../MUDXPlus.svelte",
    "../Sprites.svelte",
    "../Inventory.svelte"
  ],
  "sourcesContent": [
    "<script context=\"module\">\n  import { writable } from 'svelte/store';\n  import { routeInfo } from './router';\n  import {\n    CTX_ROUTER, CTX_ROUTE, getProps, isPromise, isSvelteComponent,\n  } from './utils';\n</script>\n\n<script>\n  import { onDestroy, getContext, setContext } from 'svelte';\n\n  export let key = null;\n  export let path = '/';\n  export let exact = null;\n  export let pending = null;\n  export let disabled = false;\n  export let fallback = null;\n  export let component = null;\n  export let condition = null;\n  export let redirect = null;\n\n  // replacement for `Object.keys(arguments[0].$$.props)`\n  const thisProps = ['key', 'path', 'exact', 'pending', 'disabled', 'fallback', 'component', 'condition', 'redirect'];\n\n  const routeContext = getContext(CTX_ROUTE);\n  const routerContext = getContext(CTX_ROUTER);\n\n  const { assignRoute, unassignRoute } = routerContext || {};\n\n  const routePath = routeContext ? routeContext.routePath : writable(path);\n\n  let activeRouter = null;\n  let activeProps = {};\n  let fullpath;\n  let failure;\n  let hasLoaded;\n\n  const fixedRoot = $routePath !== path && $routePath !== '/'\n    ? `${$routePath}${path !== '/' ? path : ''}`\n    : path;\n\n  try {\n    if (redirect !== null && !/^(?:\\w+:\\/\\/|\\/)/.test(redirect)) {\n      throw new TypeError(`Expecting valid URL to redirect, given '${redirect}'`);\n    }\n\n    if (condition !== null && typeof condition !== 'function') {\n      throw new TypeError(`Expecting condition to be a function, given '${condition}'`);\n    }\n\n    if (path.charAt() !== '#' && path.charAt() !== '/') {\n      throw new TypeError(`Expecting a leading slash or hash, given '${path}'`);\n    }\n\n    if (!assignRoute) {\n      throw new TypeError(`Missing top-level <Router>, given route: ${path}`);\n    }\n\n    const fixedRoute = path !== fixedRoot && fixedRoot.substr(-1) !== '/'\n      ? `${fixedRoot}/`\n      : fixedRoot;\n\n    [key, fullpath] = assignRoute(key, fixedRoute, {\n      condition, redirect, fallback, exact,\n    });\n  } catch (e) {\n    failure = e;\n  }\n\n  $: if (key) {\n    activeRouter = !disabled && $routeInfo[key];\n    activeProps = getProps($$props, thisProps);\n  }\n\n  $: if (activeRouter) {\n    if (!component) { // component passed as slot\n      hasLoaded = true;\n    } else if (isSvelteComponent(component)) { // component passed as Svelte component\n      hasLoaded = true;\n    } else if (isPromise(component)) { // component passed as import()\n      component.then(module => {\n        component = module.default;\n        hasLoaded = true;\n      });\n    } else { // component passed as () => import()\n      component().then(module => {\n        component = module.default;\n        hasLoaded = true;\n      });\n    }\n  }\n\n  onDestroy(() => {\n    if (unassignRoute) {\n      unassignRoute(fullpath);\n    }\n  });\n\n  setContext(CTX_ROUTE, {\n    routePath,\n  });\n</script>\n\n<style>\n  [data-failure] {\n    color: red;\n  }\n</style>\n\n{#if failure}\n  <p data-failure>{failure}</p>\n{/if}\n\n{#if activeRouter}\n  {#if !hasLoaded}\n    {#if pending}\n      {#if isSvelteComponent(pending)}\n        <svelte:component this={pending} router={activeRouter} {...activeProps} />\n      {:else}\n        {pending}\n      {/if}\n    {/if}\n  {:else}\n    {#if component}\n      <svelte:component this={component} router={activeRouter} {...activeProps} />\n    {:else}\n      <slot router={activeRouter} props={activeProps} />\n    {/if}\n  {/if}\n{/if}\n",
    "<script context=\"module\">\n  import { writable } from 'svelte/store';\n  import { CTX_ROUTER, router } from './utils';\n  import {\n    baseRouter, addRouter, findRoutes, doFallback,\n  } from './router';\n</script>\n\n<script>\n  import {\n    onMount, onDestroy, getContext, setContext,\n  } from 'svelte';\n\n  let cleanup;\n  let failure;\n  let fallback;\n\n  export let path = '/';\n  export let disabled = false;\n  export let condition = null;\n  export let nofallback = false;\n\n  const routerContext = getContext(CTX_ROUTER);\n  const basePath = routerContext ? routerContext.basePath : writable(path);\n\n  const fixedRoot = $basePath !== path && $basePath !== '/'\n    ? `${$basePath}${path !== '/' ? path : ''}`\n    : path;\n\n  try {\n    if (condition !== null && typeof condition !== 'function') {\n      throw new TypeError(`Expecting condition to be a function, given '${condition}'`);\n    }\n\n    if (path.charAt() !== '#' && path.charAt() !== '/') {\n      throw new TypeError(`Expecting a leading slash or hash, given '${path}'`);\n    }\n  } catch (e) {\n    failure = e;\n  }\n\n  function assignRoute(key, route, detail) {\n    key = key || Math.random().toString(36).substr(2);\n\n    // consider as nested routes if they does not have any segment\n    const nested = !route.substr(1).includes('/');\n    const handler = { key, nested, ...detail };\n\n    let fullpath;\n\n    baseRouter.mount(fixedRoot, () => {\n      fullpath = baseRouter.add(route, handler);\n      fallback = (handler.fallback && key) || fallback;\n    });\n\n    findRoutes();\n\n    return [key, fullpath];\n  }\n\n  function unassignRoute(route) {\n    try {\n      baseRouter.rm(route);\n    } catch (e) {\n      // ðŸ”¥ this is fine...\n    }\n    findRoutes();\n  }\n\n  function onError(err) {\n    failure = err;\n\n    if (failure && fallback) {\n      doFallback(failure, fallback);\n    }\n  }\n\n  onMount(() => {\n    cleanup = addRouter(fixedRoot, fallback, onError);\n  });\n\n  onDestroy(() => {\n    if (cleanup) cleanup();\n  });\n\n  setContext(CTX_ROUTER, {\n    basePath,\n    assignRoute,\n    unassignRoute,\n  });\n\n  $: if (condition) {\n    disabled = !condition($router);\n  }\n</script>\n\n<style>\n  [data-failure] {\n    border: 1px dashed silver;\n  }\n</style>\n\n{#if !disabled}\n  <slot />\n{/if}\n\n{#if failure && !fallback && !nofallback}\n  <fieldset data-failure>\n    <legend>Router failure: {path}</legend>\n    <pre>{failure}</pre>\n  </fieldset>\n{/if}\n",
    "<style>\r\n  :global(body) {\r\n    background-color: #263238;\r\n    transition: background-color 0.3s;\r\n    margin: 0 auto;\r\n    padding: 0px;\r\n    color: #d8dee9;\r\n\r\n    /* The image used */\r\n    /*background-image: url(\"bg.jpg\");*/\r\n    /* Full height */\r\n    height: 100%;\r\n    /* Center and scale the image nicely */\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    text-decoration: none;\r\n    text-decoration-line: none;\r\n  }\r\n  :global(a:href) {\r\n    text-decoration: none;\r\n  }\r\n  :global(label) {\r\n    color: #00796b;\r\n  }\r\n  :global(a) {\r\n    color: #dedede;\r\n\r\n    text-decoration: none;\r\n  }\r\n  :global(a:hover) {\r\n    text-decoration: none;\r\n  }\r\n  .brand-logo {\r\n    margin-left: 0em;\r\n    margin-right: 1em;\r\n  }\r\n  .iconspacing {\r\n    margin-right: 0.5em;\r\n  }\r\n\r\n  :global(a:visited) {\r\n    text-decoration: none;\r\n    text-decoration-line: none;\r\n    color: #aaa;\r\n  }\r\n  nav {\r\n    background: #00000055;\r\n  }\r\n  nav {\r\n    margin-bottom: 2em;\r\n  }\r\n  .mobile {\r\n    font-size: 10px;\r\n  }\r\n  img {\r\n    height: 40px;\r\n  }\r\n</style>\r\n\r\n<script>\r\n  import Sprites from \"./game/Sprites.svelte\";\r\n  import AppContent from \"./AppContent.svelte\";\r\n  import MediaQuery from \"./MediaQuery.svelte\";\r\n  import {\r\n    HashIcon,\r\n    ShieldIcon,\r\n    BookOpenIcon,\r\n    EditIcon,\r\n    PlayIcon,\r\n    UsersIcon,\r\n  } from \"svelte-feather-icons\";\r\n  //import { Router, Link, Route, navigate } from \"svelte-routing\";\r\n  import { Router, Route, Link, router } from \"yrv\";\r\n  import { fade, fly } from \"svelte/transition\";\r\n  import Game from \"./game/Game.svelte\";\r\n  import Welcome from \"./Welcome.svelte\";\r\n  import Creator from \"./creator/Creator.svelte\";\r\n  import Characters from \"./characters/Characters.svelte\";\r\n  import UserForm from \"./UserForm.svelte\";\r\n  import { afterUpdate, onMount } from \"svelte\";\r\n\r\n  import { user, subMenu } from \"./stores.js\";\r\n\r\n  import UserMenu from \"./UserMenu.svelte\";\r\n  import { createAuth } from \"./auth.js\";\r\n\r\n  let navbarVisible = true;\r\n\r\n  // Auth0 config\r\n  const config = {\r\n    domain: \"owndnd.eu.auth0.com\",\r\n    client_id: \"mxcEqTuAUOzrL798mbVTpqFxpGGVp3gI\",\r\n    audience: \"http://talesofapirate.com/dnd/api\",\r\n  };\r\n\r\n  const { isLoading, isAuthenticated, authToken } = createAuth(config);\r\n  $: state = {\r\n    isAuthenticated: $isAuthenticated,\r\n    authToken: $authToken.slice(0, 20),\r\n  };\r\n\r\n  String.prototype.capitalize = function () {\r\n    return this.charAt(0).toUpperCase() + this.slice(1);\r\n  };\r\n\r\n  onMount(async () => {\r\n    //var elems = document.querySelectorAll(\".tabs\");\r\n    //let instance = M.Tabs.init(elems);\r\n  });\r\n  export let url = \"\";\r\n\r\n  const onHLJSLoaded = () => {\r\n    hljs.initHighlightingOnLoad();\r\n  };\r\n\r\n  router.subscribe((e) => {\r\n    if (!e.initial) {\r\n      //console.log(e);\r\n      if (e.path.includes(\"/play\")) {\r\n        navbarVisible = false;\r\n      } else {\r\n        navbarVisible = true;\r\n      }\r\n    }\r\n  });\r\n</script>\r\n\r\n<svelte:head>\r\n  <script src=\"https://cdn.auth0.com/js/auth0/9.0/auth0.min.js\">\r\n\r\n  </script>\r\n  <link\r\n    rel=\"stylesheet\"\r\n    href=\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css\"\r\n  />\r\n  <script\r\n    src=\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0-beta/js/materialize.min.js\">\r\n\r\n  </script>\r\n  <link\r\n    rel=\"stylesheet\"\r\n    href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\r\n  />\r\n  <link\r\n    rel=\"stylesheet\"\r\n    href=\"https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@10.1.1/build/styles/atom-one-dark.min.css\"\r\n  />\r\n  <script\r\n    src=\"https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@10.1.1/build/highlight.min.js\"\r\n    on:load=\"{onHLJSLoaded}\">\r\n\r\n  </script>\r\n  <script\r\n    src=\"https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@10.1.1/build/languages/javascript.min.js\">\r\n\r\n  </script>\r\n</svelte:head>\r\n\r\n<div class=\"root default\">\r\n\r\n  <Router>\r\n\r\n    {#if navbarVisible}\r\n      <nav class=\"nav-extended\" in:fly=\"{{ y: -200, duration: 2000 }}\" out:fade>\r\n        <div class=\"nav-wrapper container\">\r\n          <a href=\"#\" class=\"brand-logo\">\r\n            <span class=\"valign-wrapper italic\">\r\n              <span class=\"iconspacing\">\r\n\r\n                <BookOpenIcon size=\"24\" />\r\n              </span>\r\n              <Link href=\"/\">Tales</Link>\r\n            </span>\r\n          </a>\r\n\r\n          <ul class=\"right hide-on-small-only\">\r\n\r\n            <li>\r\n              <Link href=\"/play\">\r\n                <span class=\"valign-wrapper\">\r\n                  <span class=\"iconspacing valign-wrapper\">\r\n                    <PlayIcon size=\"18\" />\r\n                  </span>\r\n                  Play\r\n                </span>\r\n              </Link>\r\n\r\n            </li>\r\n            {#if $isAuthenticated}\r\n              <li>\r\n                <Link href=\"/list\">\r\n                  <span class=\"valign-wrapper\">\r\n                    <span class=\"iconspacing valign-wrapper\">\r\n                      <UsersIcon size=\"18\" />\r\n                    </span>\r\n                    Top Characters\r\n                  </span>\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link href=\"/creator/rooms\">\r\n                  <span class=\"valign-wrapper\">\r\n                    <span class=\"iconspacing valign-wrapper\">\r\n                      <EditIcon size=\"18\" />\r\n                    </span>\r\n                    Creator\r\n                  </span>\r\n                </Link>\r\n              </li>\r\n            {/if}\r\n            <li>\r\n              <Link href=\"/signup\">News</Link>\r\n            </li>\r\n            <UserMenu />\r\n          </ul>\r\n        </div>\r\n\r\n        {#if $subMenu.active}\r\n          <MediaQuery query=\"(max-width: 1280px)\" let:matches>\r\n            {#if matches}\r\n              <div class=\"nav-content\">\r\n                <ul class=\"tabs tabs-transparent\">\r\n                  {#each $subMenu.entries as entry}\r\n                    <li class=\"tab\">\r\n                      <Link href=\"{entry.nav}\">{entry.name}</Link>\r\n                    </li>\r\n                  {/each}\r\n                </ul>\r\n              </div>\r\n            {:else}\r\n              <div class=\"nav-content container\">\r\n                <ul class=\"tabs tabs-transparent\">\r\n                  {#each $subMenu.entries as entry}\r\n                    <li class=\"tab\">\r\n                      <Link href=\"{entry.nav}\">{entry.name}</Link>\r\n                    </li>\r\n                  {/each}\r\n                </ul>\r\n              </div>\r\n            {/if}\r\n          </MediaQuery>\r\n        {/if}\r\n\r\n      </nav>\r\n    {/if}\r\n\r\n    {#if !navbarVisible}\r\n      <a href=\"/\" class=\"brand-logo\" style=\"position:absolute; left: 15; top: 15px; z-index:1000;\">\r\n        <span class=\"valign-wrapper italic\" style=\"padding:1em; float: left;\">\r\n\r\n          <Link href=\"/\">\r\n            <span class=\"iconspacing\">\r\n              <BookOpenIcon size=\"24\" />\r\n            </span>\r\n          </Link>\r\n        </span>\r\n      </a>\r\n    {/if}\r\n    <MediaQuery query=\"(min-width: 1281px)\" let:matches>\r\n      {#if matches}\r\n        <main class=\"container\">\r\n          <AppContent />\r\n\r\n        </main>\r\n      {:else}\r\n        <main>\r\n          <AppContent />\r\n        </main>\r\n      {/if}\r\n    </MediaQuery>\r\n\r\n  </Router>\r\n</div>\r\n",
    "<style>\r\n\r\n.bg {\r\n    background: #2f2f2f !important;\r\n}\r\n\r\n</style>\r\n\r\n<script>\r\n\r\n</script>\r\n\r\n<h4>Credits</h4>\r\n<ul class=\"collection\">\r\n  <li class=\"collection-item bg\">\r\n    <a href=\"https://opengameart.org/content/32x32-fantasy-portrait-set\">\r\n      https://opengameart.org/content/32x32-fantasy-portrait-set\r\n    </a>\r\n    by CobraLad\r\n  </li>\r\n</ul>\r\n",
    "<style>\r\n  .content {\r\n    display: grid;\r\n    grid-template-columns: 20% 80%;\r\n    grid-column-gap: 10px;\r\n  }\r\n\r\n  input {\r\n    color: #eee;\r\n  }\r\n  #refid {\r\n    color: #999;\r\n  }\r\n  #refidlabel {\r\n    color: #999;\r\n  }\r\n</style>\r\n\r\n<script>\r\n  import { writable } from \"svelte/store\";\r\n  import { onMount } from \"svelte\";\r\n\r\n  import { createAuth, getAuth } from \"./auth.js\";\r\n  import axios from \"axios\";\r\n  import { onInterval } from \"./utils.js\";\r\n\r\n  import { getUser, updateUser } from \"./api/user.js\";\r\n\r\n  let user = writable({});\r\n\r\n  const {\r\n    isLoading,\r\n    isAuthenticated,\r\n    login,\r\n    logout,\r\n    authToken,\r\n    authError,\r\n    userInfo,\r\n  } = getAuth();\r\n\r\n  $: state = {\r\n    isLoading: $isLoading,\r\n    isAuthenticated: $isAuthenticated,\r\n    authError: $authError,\r\n    userInfo: $userInfo ? $userInfo.name : null,\r\n    authToken: $authToken.slice(0, 20),\r\n    user,\r\n  };\r\n\r\n  $: {\r\n    getUser(\r\n      $authToken,\r\n      (u) => {\r\n        user.set(u);\r\n      },\r\n      (err) => console.log(err)\r\n    );\r\n  }\r\n\r\n  async function handleSubmit(event) {\r\n    if ($isAuthenticated) {\r\n      updateUser($authToken, $user, () => {\r\n        console.log(\"user updated \");\r\n      });\r\n    }\r\n  }\r\n</script>\r\n\r\n<div class=\"row\">\r\n  <h3>Your Account data</h3>\r\n  <form class=\"col s12\">\r\n\r\n    <div class=\"row\">\r\n      <div class=\"input-field col s12\">\r\n        <input bind:value=\"{$user.refid}\" id=\"refid\" type=\"text\" disabled />\r\n        <label id=\"refidlabel\" for=\"refid\" class=\"active\">Reference ID</label>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"input-field col s12\">\r\n        <input\r\n          bind:value=\"{$user.name}\"\r\n          id=\"username\"\r\n          type=\"text\"\r\n          class=\"validate\"\r\n        />\r\n        <label for=\"username\" class=\"active\">Name</label>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"input-field col s12\">\r\n        <input\r\n          bind:value=\"{$user.nickname}\"\r\n          id=\"usernickname\"\r\n          type=\"text\"\r\n          class=\"validate\"\r\n        />\r\n        <label for=\"usernickname\" class=\"active\">Nickname</label>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"input-field col s12\">\r\n        <input\r\n          bind:value=\"{$user.email}\"\r\n          id=\"useremail\"\r\n          type=\"text\"\r\n          class=\"validate\"\r\n        />\r\n        <label for=\"useremail\" class=\"active\">E-Mail</label>\r\n      </div>\r\n    </div>\r\n  </form>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"input-field col s12\">\r\n      <button\r\n        class=\"btn waves-effect waves-light\"\r\n        on:click=\"{() => handleSubmit()}\"\r\n      >\r\n        Submit\r\n        <i class=\"material-icons right\">send</i>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n",
    "<style>\r\n  .userbutton {\r\n    margin-right: 1em;\r\n  }\r\n\r\n  .btn-small {\r\n    color: #eee;\r\n  }\r\n\r\n  .img {\r\n    width: 42px;\r\n  }\r\n</style>\r\n\r\n<script>\r\n  import { onMount } from \"svelte\";\r\n  import { UserIcon } from \"svelte-feather-icons\";\r\n\r\n  import { getAuth } from \"./auth.js\";\r\n  import { getUser, updateUser } from \"./api/user.js\";\r\n\r\n  const {\r\n    isLoading,\r\n    isAuthenticated,\r\n    login,\r\n    logout,\r\n    authToken,\r\n    authError,\r\n    userInfo,\r\n  } = getAuth();\r\n\r\n  async function loadUserData() {\r\n    getUser(\r\n      $authToken,\r\n      (u) => {\r\n        user.set(u);\r\n      },\r\n      (err) => console.log(err)\r\n    );\r\n  }\r\n\r\n  async function signup() {\r\n    await login();\r\n\r\n    if ($isAuthenticated) {\r\n      await loadUserData();\r\n    }\r\n  }\r\n\r\n  onMount(() => {\r\n    document.addEventListener(\"DOMContentLoaded\", function () {\r\n      var elems = document.querySelectorAll(\".dropdown-trigger\");\r\n      var instances = M.Dropdown.init(elems);\r\n    });\r\n  });\r\n</script>\r\n\r\n<!-- Dropdown Structure -->\r\n<ul id=\"dropdown1\" class=\"dropdown-content\">\r\n  <li>\r\n    <a href=\"#!\" on:click=\"{() => logout()}\">logout</a>\r\n  </li>\r\n  <li>\r\n    <a href=\"account\">profile</a>\r\n  </li>\r\n</ul>\r\n\r\n{#if $isLoading}\r\n  <li class=\"right-align\">...</li>\r\n{:else if !$isAuthenticated}\r\n  <li class=\"right-align\">\r\n    <p on:click=\"{() => signup()}\" class=\"btn-small userbutton green\">Signup</p>\r\n  </li>\r\n  <li class=\"right-align\">\r\n    <button on:click=\"{() => login()}\" class=\"btn-small userbutton green\">\r\n      Log in\r\n    </button>\r\n  </li>\r\n{/if}\r\n<li>\r\n\r\n  <a class=\"dropdown-trigger\" href=\"#\" data-target=\"dropdown1\">\r\n    <span class=\"valign-wrapper\">\r\n\r\n      {#if $isAuthenticated}\r\n        <img src=\"{$userInfo.picture}\" alt=\"\" class=\"circle img \" />\r\n        <i class=\"material-icons left\">arrow_drop_down</i>\r\n      {/if}\r\n    </span>\r\n\r\n  </a>\r\n</li>\r\n",
    "<style>\r\n  .loginText {\r\n    color: greenyellow;\r\n  }\r\n  .welcome {\r\n    padding: 1em;\r\n  }\r\n  .modal {\r\n    background-color: darkslategrey;\r\n  }\r\n\r\n  .room {\r\n    border-radius: 0.5em;\r\n    image-rendering: pixelated;\r\n  }\r\n\r\n  .highlightContainer {\r\n    float: right;\r\n    margin: 1em;\r\n  }\r\n  .roomHighlight {\r\n    background-color: #00000066;\r\n    border: 1px solid #ffffff33;\r\n    border-radius: 1em;\r\n    padding: 0.5em;\r\n  }\r\n</style>\r\n\r\n<script>\r\n  import Sprites from \"./game/Sprites.svelte\";\r\n  import CharacterCreator from \"./characters/CharacterCreator.svelte\";\r\n  import { onMount } from \"svelte\";\r\n  import { Router, Route, Link, navigateTo } from \"yrv\";\r\n\r\n  import { getRoomOfTheDay } from \"./api/rooms\";\r\n\r\n  import { createAuth, getAuth } from \"./auth.js\";\r\n  import axios from \"axios\";\r\n  import { onInterval } from \"./utils.js\";\r\n  import { getUser } from \"./api/user.js\";\r\n  import { writable } from \"svelte/store\";\r\n\r\n  const nickname = writable(\"stranger\");\r\n  const roomOfTheDay = writable({\r\n    name: \"RoomOfTheDay\",\r\n    meta: {\r\n      background: \"oldtown-griphon\",\r\n    },\r\n  });\r\n  let loaded = false;\r\n\r\n  const {\r\n    isLoading,\r\n    isAuthenticated,\r\n    login,\r\n    logout,\r\n    authToken,\r\n    authError,\r\n    userInfo,\r\n  } = getAuth();\r\n\r\n  $: state = {\r\n    isLoading: $isLoading,\r\n    isAuthenticated: $isAuthenticated,\r\n    authError: $authError,\r\n    userInfo: $userInfo ? $userInfo.name : null,\r\n    authToken: $authToken.slice(0, 20),\r\n    nickname: $nickname,\r\n  };\r\n\r\n  $: {\r\n    if (!loaded && !$isLoading && $isAuthenticated) {\r\n      loaded = true;\r\n      getUser(\r\n        $authToken,\r\n        (user) => {\r\n          nickname.set(user.nickname);\r\n        },\r\n        (err) => console.log(err)\r\n      );\r\n    }\r\n  }\r\n\r\n  const loadUser = async () => {};\r\n\r\n  onMount(async () => {\r\n    getRoomOfTheDay(\r\n      (room) => {\r\n        roomOfTheDay.set(room);\r\n      },\r\n      (error) => console.log(error)\r\n    );\r\n\r\n    document.addEventListener(\"DOMContentLoaded\", function () {\r\n      var elems = document.querySelectorAll(\".modal\");\r\n      var instances = M.Modal.init(elems, {});\r\n    });\r\n\r\n    await loadUser();\r\n  });\r\n</script>\r\n\r\n{#if $isLoading}\r\n  <div class=\"progress\">\r\n    <div class=\"indeterminate\"></div>\r\n  </div>\r\n{/if}\r\n\r\n<div class=\"left\">\r\n\r\n  <div class=\"highlightContainer\" style=\"margin-left: 2em;\">\r\n    <p style=\"text-align:center;\">Room of the Day</p>\r\n    <div class=\"roomHighlight z-depth-2\">\r\n\r\n      <img\r\n        class=\"room\"\r\n        src=\"img/bg/{$roomOfTheDay.meta.background}.png\"\r\n        alt=\"Room of the Day\"\r\n      />\r\n      <p\r\n        style=\"width: 100%; padding-left: 1em; padding-right: 1em; \"       \r\n      >\r\n        {$roomOfTheDay.name}\r\n      </p>\r\n      <p\r\n        style=\"width: 300px; padding-left: 1em; padding-right: 1em;\r\n        text-align:justify;\"\r\n      >\r\n        {$roomOfTheDay.description}\r\n      </p>\r\n    </div>\r\n  </div>\r\n  {#if $isAuthenticated}\r\n    <div class=\"welcome\" style=\"float:left;\">\r\n\r\n      <h5>Welcome back {$nickname}</h5>\r\n\r\n      <div>\r\n\r\n        <Link href=\"/play\">Start playing</Link>\r\n        or try to create some\r\n        <Link href=\"/creator\">own content.</Link>\r\n      </div>\r\n\r\n      <div>\r\n        <p>\r\n          <a class=\"modal-trigger\" href=\"#modal1\">Create a new Character</a>\r\n        </p>\r\n\r\n      </div>\r\n    </div>\r\n  {:else if !$isAuthenticated}\r\n    <div>\r\n      <h4>Welcome Stranger</h4>\r\n      <p>\r\n        Please\r\n        <a href=\"/login\" class=\"loginText\">log</a>\r\n        in or\r\n        <a href=\"/signup\" class=\"loginText\">signup</a>\r\n      </p>\r\n      <button on:click=\"{() => login()}\" class=\"btn-small userbutton green\">\r\n        Log in\r\n      </button>\r\n    </div>\r\n  {/if}\r\n\r\n  <div class=\"welcome\" style=\"clear:left; text-align: justify;\">\r\n    <h5>TalesMUD</h5>\r\n    <p>\r\n      TalesMUD is a MUD/MUX game engine/game development platform. Using\r\n      TalesMud you can create your own MUD server, define your game content and\r\n      either use the existing web client or build a new one from scratch.\r\n    </p>\r\n    <p>\r\n      This is still a very early version with many more features planned. As\r\n      development progresses you can expect several updates to the developer\r\n      sandbox version running on this site.\r\n    </p>\r\n    Implemented\r\n    <ul>\r\n      <li>- Character creation</li>\r\n      <li>- Room creation, movement between rooms</li>\r\n    </ul>\r\n    Planned\r\n    <ul>\r\n      <li>- Items, Inventory Management</li>\r\n      <li>- NPCs, Enemies and Dialogs</li>\r\n      <li>- Combat System</li>\r\n      <li>- Quest System</li>\r\n    </ul>\r\n    <p>\r\n      Head over to\r\n      <Link href=\"/play\">play</Link>\r\n      create a character and try out the current set of commands by typing\r\n      [help]. List of all global commands:\r\n    </p>\r\n    <ul>\r\n\r\n      <li>[shrug] shrug emote</li>\r\n      <li>[sc, selectcharacter] select a character, use: sc [charactername]</li>\r\n      <li>[lc, listcharacters] list all your characters</li>\r\n      <li>[h, help] are you really asking?</li>\r\n      <li>[who] list all online players</li>\r\n      <li>[inventory, i] Display your inventory</li>\r\n      <li>[newcharacter, nc] Createa new character</li>\r\n      <li>[scream] scream through the room</li>\r\n    </ul>\r\n\r\n  </div>\r\n\r\n  <div class=\"welcome\">\r\n    <h5>News</h5>\r\n    <ul>\r\n      <li>\r\n        12.06.2020 - First minimalistic version live supporting room creation,\r\n        character creation (template picks)\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"welcome\">\r\n    <h5>Credits</h5>\r\n    The application uses several assets througout the app and the backend, here\r\n    is a list of free and licensed art:\r\n    <Link href=\"/credits\">See Credits</Link>\r\n\r\n  </div>\r\n\r\n  <CharacterCreator />\r\n\r\n</div>\r\n",
    "<style>\r\n  .modal {\r\n    background-color: darkslategrey;\r\n  }\r\n\r\n  input {\r\n    color: #eee;\r\n  }\r\n</style>\r\n\r\n<script>\r\n  import CharacterTemplate from \"./CharacterTemplate.svelte\";\r\n  import { onMount } from \"svelte\";\r\n  import { writable } from \"svelte/store\";\r\n\r\n  import { createAuth, getAuth } from \"../auth.js\";\r\n  import axios from \"axios\";\r\n  import { onInterval } from \"../utils.js\";\r\n  import { getCharacterTemplates, createNewCharacter } from \"../api/characters\";\r\n\r\n  let data = [];\r\n  let topTen = [];\r\n\r\n  const store = writable({\r\n    templateSelected: false,\r\n    selectedTemplate: 0,\r\n    character: {},\r\n    name: \"unnamed\",\r\n    description: \"Describe your new character\",\r\n  });\r\n\r\n  const {\r\n    isLoading,\r\n    isAuthenticated,\r\n    login,\r\n    logout,\r\n    authToken,\r\n    authError,\r\n    userInfo,\r\n  } = getAuth();\r\n\r\n  $: state = {\r\n    isLoading: $isLoading,\r\n    isAuthenticated: $isAuthenticated,\r\n    authError: $authError,\r\n    userInfo: $userInfo ? $userInfo.name : null,\r\n    authToken: $authToken.slice(0, 20),\r\n  };\r\n\r\n  const create = () => {\r\n    const createDTO = {\r\n      name: $store.name,\r\n      description: $store.description,\r\n      templateId: $store.selectedTemplate,\r\n    };\r\n\r\n    createNewCharacter(\r\n      $authToken,\r\n      createDTO,\r\n      (character) => console.log(\"Created character \" + character.id),\r\n      (err) => console.log(err)\r\n    );\r\n  };\r\n\r\n  onMount(async () => {\r\n    document.addEventListener(\"DOMContentLoaded\", function () {\r\n      var elems = document.querySelectorAll(\".modal\");\r\n      var instances = M.Modal.init(elems, {});\r\n    });\r\n\r\n    getCharacterTemplates(\r\n      (result) => {\r\n        templates.set(result);\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  });\r\n\r\n  const templates = writable([]);\r\n</script>\r\n\r\n<!-- Modal Structure -->\r\n<div id=\"modal1\" class=\"modal\">\r\n  <div class=\"modal-content\">\r\n    <h4>Create new Character</h4>\r\n\r\n    {#if !$store.templateSelected}\r\n      <p>\r\n        Select a template which fits you most, you can change starting\r\n        attributes as well\r\n      </p>\r\n      <div class=\"row\">\r\n        {#each $templates as character}\r\n          <div class=\"col s4\">\r\n            <CharacterTemplate\r\n              name=\"{character.name}\"\r\n              description=\"{character.description}\"\r\n              created=\"{character.created}\"\r\n              attributes=\"{character.attributes}\"\r\n              templateId=\"{character.templateId}\"\r\n              callback=\"{(id) => {\r\n                store.update((state) => {\r\n                  state.templateSelected = true;\r\n                  state.selectedTemplate = id;\r\n                  state.character = character;\r\n                  state.name = character.name;\r\n                  state.description = character.description;\r\n                  return state;\r\n                });\r\n              }}\"\r\n            />\r\n          </div>\r\n        {/each}\r\n      </div>\r\n    {/if}\r\n\r\n    <div class=\"row\">\r\n      {#if $store.templateSelected}\r\n        <div class=\"col s4\">\r\n          <CharacterTemplate\r\n            name=\"{$store.name}\"\r\n            description=\"{$store.description}\"\r\n            created=\"{$store.character.created}\"\r\n            attributes=\"{$store.character.attributes}\"\r\n          />\r\n        </div>\r\n      {/if}\r\n      <div class=\"col s8\">\r\n\r\n        <div class=\"input-field\">\r\n          <input\r\n            bind:value=\"{$store.name}\"\r\n            id=\"name\"\r\n            type=\"text\"\r\n            class=\"validate\"\r\n          />\r\n          <label for=\"name\" class=\"active\">Name</label>\r\n        </div>\r\n\r\n        <div class=\"input-field\">\r\n          <input\r\n            bind:value=\"{$store.description}\"\r\n            id=\"description\"\r\n            type=\"text\"\r\n          />\r\n          <label for=\"description\" class=\"active\">Description</label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button\r\n      href=\"#!\"\r\n      class=\"modal-close waves-effect waves-red btn\"      \r\n    >\r\n      Cancel\r\n    </button>\r\n    <button\r\n      href=\"#!\"\r\n      class=\"modal-close waves-effect waves-green btn\"\r\n      on:click=\"{create}\"\r\n    >\r\n      Create\r\n    </button>\r\n  </div>\r\n</div>\r\n",
    "<style>\r\n  .img {\r\n    width: 96px;\r\n    height: 96px;\r\n    margin: 1em;\r\n    image-rendering: pixelated;\r\n  }\r\n  .characterCard {\r\n    width: 250px;\r\n    height: 200px;\r\n    margin: 2em;\r\n  }\r\n  .card-title {\r\n    font-size: 10px;\r\n  }\r\n</style>\r\n\r\n<script>\r\n  import MediaQuery from \"svelte-media-query\";\r\n  import { fade } from \"svelte/transition\";\r\n  import moment from \"moment\";\r\n\r\n  export let name;\r\n  export let level;\r\n  export let cclass;\r\n  export let xp;\r\n\r\n  function formattedDate() {\r\n    return moment(created).format(\"MMMM Do YYYY, h:mm:ss a\");\r\n  }\r\n\r\n  function avatar() {\r\n    let num = 1 + Math.abs(name.hashCode() % 12);\r\n    return \"img/avatars/\" + num + \"p.png\";\r\n  }\r\n</script>\r\n\r\n<div class=\"card blue-grey darken-2 hoverable characterCard center-align\" style=\"margin-top:50px;\">\r\n  <div class=\"card-content white-text\">\r\n\r\n    <img src=\"{avatar()}\" alt=\"\" style=\"margin-top:-70px;\" class=\"circle img z-depth-2\" />\r\n\r\n    <span class=\"card-title\">{name}</span>\r\n    <span class=\"card-content\">LVL {level} - {cclass.name}</span><br>\r\n    <span class=\"card-content\">{xp} XP</span>\r\n  </div>\r\n</div>\r\n",
    "<style>\r\n  .img {\r\n    width: 96px;\r\n    height: 96px;\r\n    margin: 1em;\r\n    image-rendering: pixelated;\r\n  }\r\n  .characterCard {\r\n    width: 250px;\r\n  }\r\n\r\n  td {\r\n    padding: 2px;\r\n  }\r\n</style>\r\n\r\n<script>\r\n  import MediaQuery from \"svelte-media-query\";\r\n  import { fade } from \"svelte/transition\";\r\n  import moment from \"moment\";\r\n\r\n  export let name;\r\n  export let description;\r\n  export let created;\r\n  export let level;\r\n  export let xp;\r\n  export let templateId;\r\n  export let attributes;\r\n  export let callback;\r\n\r\n  function formattedDate() {\r\n    return moment(created).format(\"MMMM Do YYYY, h:mm:ss a\");\r\n  }\r\n\r\n  function avatar() {\r\n    let num = 1 + Math.abs(name.hashCode()%12)\r\n    return \"img/avatars/\" + num + \"p.png\";\r\n  }\r\n</script>\r\n\r\n<div class=\"card cyan darken-3 hoverable characterCard center-align\">\r\n  <div class=\"card-content white-text\">\r\n    <img src=\"{avatar()}\" alt=\"\" class=\"circle img\" />\r\n    <span class=\"card-title\">{name}</span>\r\n    <span>{description}</span>\r\n\r\n  </div>\r\n  <div class=\"card-content\">\r\n\r\n    {#if attributes}\r\n      <table>\r\n        <tbody>\r\n          {#each attributes as attribute}\r\n            <tr>\r\n              <td>{attribute.name}</td>\r\n              <td class=\"right\">{attribute.value}</td>\r\n            </tr>\r\n          {/each}\r\n        </tbody>\r\n      </table>\r\n      \r\n    {/if}\r\n  </div>\r\n  <div class=\"card-content\">\r\n    <button\r\n      class=\"btn green\"\r\n      on:click=\"{() => {\r\n        callback(templateId);\r\n      }}\"\r\n    >\r\n      Choose\r\n    </button>\r\n  </div>\r\n\r\n</div>\r\n",
    "<style>\r\n  .collapsible-header {\r\n    background-color: transparent;\r\n  }\r\n  .collapsible-body {\r\n    padding: 1em;\r\n    margin: 1em;\r\n  }\r\n  label {\r\n    color: #eee;\r\n  }\r\n  input {\r\n    color: white;\r\n  }\r\n  input:disabled {\r\n    color: white;\r\n  }\r\n</style>\r\n\r\n<script>\r\n  import { onMount } from \"svelte\";\r\n\r\n  export let action;\r\n  export let deleteAction;\r\n\r\n  onMount(async () => {\r\n    if (action.params === null) {\r\n      action.params = new Map();\r\n    }\r\n  });\r\n</script>\r\n\r\n<li>\r\n  <div class=\"collapsible-header\">\r\n    <div class=\"col s9 left valign-wrapper\">\r\n      <i class=\"material-icons left-align\">flare</i>\r\n      {action.name}\r\n    </div>\r\n    <div class=\"col s3 right-align\">\r\n      <button\r\n        on:click=\"{() => deleteAction(action)}\"\r\n        class=\"btn-small red align-right\"\r\n      >\r\n        Delete Action\r\n      </button>\r\n    </div>\r\n\r\n  </div>\r\n\r\n  <div class=\"collapsible-body\">\r\n    <div class=\"row\">\r\n\r\n      <div class=\"input-field\">\r\n        <input\r\n          placeholder=\"Placeholder\"\r\n          id=\"name-{action.name}\"\r\n          type=\"text\"\r\n          bind:value=\"{action.name}\"\r\n        />\r\n        <label for=\"name-{action.name}\">Name</label>\r\n\r\n        <div class=\"input-field\">\r\n          <input\r\n            placeholder=\"Placeholder\"\r\n            id=\"desc-{action.description}\"\r\n            type=\"text\"\r\n            bind:value=\"{action.description}\"\r\n          />\r\n          <label for=\"desc-{action.description}\">Description</label>\r\n          <div class=\"input-field\">\r\n            <input\r\n              id=\"target-{action.response}\"\r\n              type=\"text\"\r\n              bind:value=\"{action.response}\"\r\n            />\r\n            <label for=\"target-{action.response}\">Response</label>\r\n          </div>\r\n\r\n          <div class=\"input-field\">\r\n            <select\r\n              id=\"autocomplete-input-{action.type}\"\r\n              bind:value=\"{action.type}\"\r\n            >\r\n\r\n              <option value=\"response\">Respond to Player</option>\r\n              <option value=\"response_room\">Respond to Room</option>\r\n              <option value=\"script\">Run Script</option>\r\n            </select>\r\n            <label>Type</label>\r\n          </div>\r\n          <div class=\"input-field\">\r\n            <input\r\n              id=\"scriptid-{action.response}-1\"\r\n              type=\"text\"\r\n            />\r\n            <label for=\"target-{action.response}-1\">\r\n              Script ID(if script is selected)\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</li>\r\n",
    "<style>\r\n  .sidelist {\r\n    width: 20em;\r\n  }\r\n  textarea {\r\n    color: white;\r\n    margin-top: 1em;\r\n  }\r\n  .search {\r\n    color: white !important;\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n  .not_stored {\r\n    border: 1px dashed orange;\r\n  }\r\n  .card-panel {\r\n    padding-bottom: 0;\r\n    margin-bottom: 0;\r\n  }\r\n  .newbadge {\r\n    background-color: #26a69a;\r\n    border-radius: 5px;\r\n    color: #d8dee9;\r\n    padding: 3px;\r\n    width: auto;\r\n    text-overflow: ellipsis;\r\n  }\r\n\r\n  input {\r\n    color: white;\r\n  }\r\n  :global(input) {\r\n    color: #fff;\r\n  }\r\n  .margininput {\r\n    margin-left: 0.5em;\r\n    margin-right: 0.5em;\r\n  }\r\n  input:disabled {\r\n    color: white;\r\n  }\r\n  .no-padding {\r\n    padding: 0;\r\n  }\r\n\r\n  .first_label {\r\n    transform: translateX(-10px) translateY(-14px) scale(0.8);\r\n  }\r\n\r\n  .btn-small {\r\n    margin-right: 0.5em;\r\n    margin-left: 0.5em;\r\n  }\r\n\r\n  .collection-item {\r\n    color: #333;\r\n  }\r\n  .collection {\r\n    color: #333;\r\n  }\r\n\r\n  .materialize-textarea {\r\n    border-bottom: none;\r\n  }\r\n  .header {\r\n    font-size: 150%;\r\n    font-weight: 600;\r\n  }\r\n  .active {\r\n    color: #ccc;\r\n  }\r\n  label {\r\n    color: #00796b;\r\n  }\r\n</style>\r\n\r\n<script>\r\n  import ActionEditor from \"./ActionEditor.svelte\";\r\n  import Toolbar from \"./Toolbar.svelte\";\r\n  import { createStore } from \"./CRUDEditorStore.js\";\r\n  import { PlusIcon } from \"svelte-feather-icons\";\r\n  import { writable } from \"svelte/store\";\r\n  import { onMount } from \"svelte\";\r\n  import { createAuth, getAuth } from \"../auth.js\";\r\n\r\n  export let config;\r\n  export let store;\r\n\r\n  const { isAuthenticated, authToken } = getAuth();\r\n  $: state = {\r\n    isAuthenticated: $isAuthenticated,\r\n    authToken: $authToken.slice(0, 20),\r\n  };\r\n\r\n  const loadData = async (cb) => {\r\n    if (!$isAuthenticated) return;\r\n    config.get(\r\n      $authToken,\r\n      $store.filters,\r\n      (all) => {\r\n        store.setElements(all);\r\n        if (cb) cb();\r\n      },\r\n      (err) => console.log(err)\r\n    );\r\n  };\r\n\r\n  onMount(async () => {\r\n    loadData(() => {\r\n      selectElement($store.elements[0]);\r\n    });\r\n  });\r\n\r\n  const isDraft = (isnew) => {\r\n    console.log(\"re.selectedElement.isNew\" + isnew);\r\n    if (isnew === true) return \"not_stored\";\r\n    return \"\";\r\n  };\r\n\r\n  const deleteElement = async () => {\r\n    config.delete(\r\n      $authToken,\r\n      $store.selectedElement.id,\r\n      () => {\r\n        loadData(() => {\r\n          if ($store.elements) {\r\n            store.setSelectedElement($store.elements[0]);\r\n          }\r\n        });\r\n      },\r\n      () => {\r\n        console.log(\"create error.\");\r\n      }\r\n    );\r\n  };\r\n\r\n  const create = async () => {\r\n    config.create(\r\n      $authToken,\r\n      $store.selectedElement,\r\n      (element) => {\r\n        loadData();\r\n        selectElement(element);\r\n      },\r\n      () => {\r\n        console.log(\"create error.\");\r\n      }\r\n    );\r\n  };\r\n\r\n  const selectElement = (element) => {\r\n    if (config.beforeSelect) {\r\n      config.beforeSelect(element);\r\n    }\r\n\r\n    store.setSelectedElement(element, () => {\r\n      refreshUI();\r\n    });\r\n  };\r\n\r\n  const addFilter = (filter) => {\r\n    if (filter.includes(\":\")) {\r\n      let keyval = filter.split(\":\");\r\n      store.addFilter(keyval[0], keyval[1]);\r\n\r\n      loadData(() => {\r\n        selectElement($store.elements[0]);\r\n      });\r\n    }\r\n  };\r\n\r\n  const removeFilter = (filter) => {\r\n    if (filter.includes(\":\")) {\r\n      let keyval = filter.split(\":\");\r\n      store.removeFilter(keyval[0]);\r\n\r\n      loadData(() => {\r\n        selectElement($store.elements[0]);\r\n      });\r\n    }\r\n  };\r\n\r\n  const refreshUI = () => {\r\n    setTimeout(function () {\r\n      let chips = document.querySelectorAll(\".chips\");\r\n      let filters = [];\r\n\r\n      // restore current filters\r\n      $store.filters.forEach((f) => {\r\n        filters.push({\r\n          tag: f.key + \":\" + f.val,\r\n        });\r\n      });\r\n\r\n      M.Chips.init(chips, {\r\n        data: filters,\r\n        onChipAdd: (ev, chip) => addFilter(chip.firstChild.nodeValue),\r\n        onChipDelete: (ev, chip) => removeFilter(chip.firstChild.nodeValue),\r\n      });\r\n\r\n      var elems = document.querySelectorAll(\"select\");\r\n      M.FormSelect.init(elems, {});\r\n\r\n      M.updateTextFields();\r\n      var elems2 = document.querySelectorAll(\".collapsible\");\r\n      if (elems2 != undefined) {\r\n        var instances = M.Collapsible.init(elems2, {});\r\n      }\r\n\r\n      var textareas = document.querySelectorAll(\".materialize-textarea\");\r\n      textareas.forEach((e) => {\r\n        M.textareaAutoResize(e);\r\n      });\r\n\r\n      if (config.refreshUI) {\r\n        config.refreshUI();\r\n      }\r\n    }, 50);\r\n  };\r\n\r\n  const update = () => {\r\n    config.update(\r\n      $authToken,\r\n      $store.selectedElement.id,\r\n      $store.selectedElement,\r\n      () => {\r\n        console.log(\"update successful.\");\r\n        loadData();\r\n      },\r\n      () => {\r\n        console.log(\"update error.\");\r\n      }\r\n    );\r\n  };\r\n\r\n  const toolbarConfig = {\r\n    title: config.title,\r\n    actions: [\r\n      {\r\n        name: null,\r\n        color: \"\",\r\n        icon: \"filter_alt\",\r\n        fnc: () => {\r\n          store.toggleFilter();\r\n          refreshUI();\r\n        },\r\n      },\r\n      {\r\n        name: null,\r\n        icon: \"add\",\r\n        color: \"\",\r\n        fnc: () => config.new(selectElement),\r\n      },\r\n      ...config.actions, // add extra ctions\r\n    ],\r\n  };\r\n</script>\r\n\r\n<Toolbar toolbar=\"{toolbarConfig}\" />\r\n\r\n<div class=\"row\">\r\n\r\n  <!-- START: ELEMENT LIST (Master)-->\r\n  <div class=\"col s3\">\r\n    <div class=\"collection\">\r\n      {#each $store.elements as element}\r\n        <a\r\n          href=\"javascript:void(0)\"\r\n          class=\"collection-item blue-grey lighten-5\"\r\n          on:click=\"{selectElement(element)}\"\r\n        >\r\n          {#if element && config.badge}\r\n            <span class=\"new badge\" data-badge-caption=\"\">\r\n              {config.badge(element)}\r\n            </span>\r\n          {/if}\r\n          {element.name}\r\n        </a>\r\n      {/each}\r\n    </div>\r\n  </div>\r\n  <!-- END: ELEMENT LIST -->\r\n\r\n  <div class=\"col s9\">\r\n\r\n    {#if $store.filterActive}\r\n      <div class=\"card-panel blue-grey lighten-5\" style=\"padding:15px;\">\r\n        <div class=\"chips chips-placeholder search\"></div>\r\n      </div>\r\n    {/if}\r\n\r\n    <!-- START: OBJECT PAGE (Detail)-->\r\n    {#if $store.selectedElement}\r\n      <div\r\n        class=\"card-panel blue-grey darken-3 {isDraft($store.selectedElement.isNew)}\"\r\n      >\r\n        {#if $store.selectedElement.isNew}\r\n          <div class=\"row center-align\" style=\"padding:0; margin-top: -2.6em;\">\r\n            <div\r\n              class=\"chip\"\r\n              style=\"color: #121212; margin: 0; background-color: orange;\r\n              text-align:center;\"\r\n            >\r\n              Not Stored\r\n            </div>\r\n          </div>\r\n        {/if}\r\n\r\n        <div class=\"row\">\r\n          <slot name=\"hero\" />\r\n          <span class=\"header\">{$store.selectedElement.name}</span>\r\n\r\n          {#if $store.selectedElement.isNew}\r\n            <button\r\n              on:click=\"{() => create()}\"\r\n              class=\"waves-effect waves-light btn-small green right\"\r\n            >\r\n              Create\r\n            </button>\r\n          {:else}\r\n            <button\r\n              on:click=\"{() => update()}\"\r\n              class=\"waves-effect waves-light btn-small green right\"\r\n            >\r\n              Update\r\n            </button>\r\n            <button\r\n              on:click=\"{() => deleteElement()}\"\r\n              class=\"waves-effect waves-light btn-small red right\"\r\n            >\r\n              Delete\r\n            </button>\r\n          {/if}\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"no-padding input-field col s6\">\r\n            <input\r\n              placeholder=\"Name\"\r\n              id=\"itemTemplate_name\"\r\n              type=\"text\"\r\n              bind:value=\"{$store.selectedElement.name}\"\r\n            />\r\n            <label class=\"first_label\" for=\"itemTemplate_name\">Name</label>\r\n          </div>\r\n\r\n          {#if $store.selectedElement.isNew}\r\n            <div class=\"input-field col s4\">\r\n              <input\r\n                placeholder=\"ID\"\r\n                id=\"itemTemplate_id\"\r\n                type=\"text\"\r\n                bind:value=\"{$store.selectedElement.id}\"\r\n              />\r\n              <label class=\"active\" for=\"itemTemplate_id\">ID</label>\r\n            </div>\r\n          {:else}\r\n            <div class=\"input-field col s4\">\r\n              <input\r\n                placeholder=\"ID\"\r\n                id=\"itemTemplate_id\"\r\n                type=\"text\"\r\n                bind:value=\"{$store.selectedElement.id}\"\r\n                disabled\r\n              />\r\n              <label class=\"active\" for=\"itemTemplate_id\">ID</label>\r\n            </div>\r\n          {/if}\r\n\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"input-field\">\r\n            <textarea\r\n              placeholder=\"Description\"\r\n              id=\"itemTemplate_description\"\r\n              type=\"text\"\r\n              class=\"materialize-textarea\"\r\n              bind:value=\"{$store.selectedElement.description}\"\r\n            ></textarea>\r\n            <label class=\"active\" for=\"itemTemplate_description\">\r\n              Description\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        {#if config.hideDetails == undefined || !config.hideDetails}\r\n          <div class=\"row\">\r\n            <div class=\"input-field\">\r\n              <textarea\r\n                placeholder=\"Details\"\r\n                id=\"itemTemplate_detail\"\r\n                type=\"text\"\r\n                class=\"materialize-textarea\"\r\n                bind:value=\"{$store.selectedElement.detail}\"\r\n              ></textarea>\r\n              <label class=\"active\" for=\"itemTemplate_detail\">\r\n                Detail (look)\r\n              </label>\r\n            </div>\r\n          </div>\r\n        {/if}\r\n\r\n        <slot name=\"content\" />\r\n      </div>\r\n\r\n      <slot name=\"extensions\" />\r\n    {/if}\r\n  </div>\r\n\r\n</div>\r\n",
    "<style>\r\n  .collapsible-header {\r\n    background-color: transparent;\r\n  }\r\n  .collapsible-body {\r\n    padding: 1em;\r\n    margin: 1em;\r\n    border: none;\r\n    padding-bottom: 0;\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  td {\r\n    padding: 5px;\r\n  }\r\n  label {\r\n    color: #eee;\r\n  }\r\n  input {\r\n    color: white;\r\n  }\r\n  input:disabled {\r\n    color: white;\r\n  }\r\n</style>\r\n\r\n<script>\r\n  import { onMount } from \"svelte\";\r\n  export let exit;\r\n  export let store;\r\n  export let valueHelp;\r\n  export let deleteExit;\r\n\r\n  $: {\r\n    if ($valueHelp) {\r\n      updateUI();\r\n    }\r\n  }\r\n\r\n  const updateUI = () => {\r\n    // set exit target autocomplete values\r\n    let options = {\r\n      data: {},\r\n      onAutocomplete: (e) => {\r\n        const roomid = e.substring(e.lastIndexOf(\"(\") + 1, e.lastIndexOf(\")\"));\r\n\r\n        //const roomid = options.data[e];\r\n\r\n        console.log(\"ON AUTO \" + roomid);\r\n\r\n        exit.target = roomid;\r\n      },\r\n    };\r\n\r\n    let selected = \"\";\r\n\r\n    $valueHelp.forEach((element) => {\r\n      const key = element.name + \" (\" + element.id + \")\";\r\n\r\n      if (element.id === exit.target) {\r\n        selected = key;\r\n      }\r\n\r\n      options.data[key] = null;\r\n    });\r\n\r\n    const selector = \"#autocomplete-input-\" + exit.name.replace(\" \", \"_\");\r\n    var elems = document.querySelectorAll(selector);\r\n    if (elems.length > 0) {\r\n      elems[0].value = selected;\r\n    }\r\n\r\n    var instances = M.Autocomplete.init(elems, options);\r\n  };\r\n\r\n  const initial = () => {\r\n    exit.target;\r\n  };\r\n  onMount(async () => {});\r\n</script>\r\n\r\n<tr>\r\n  <td style=\"width:2em;\">\r\n    <input\r\n      placeholder=\"Name\"\r\n      id=\"name-{exit.name}\"\r\n      type=\"text\"\r\n      bind:value=\"{exit.name}\"\r\n      style=\"margin:0; height: 2em;font-size: 14px;border-color:#ffffff33;\"\r\n    />\r\n  </td>\r\n  <td>\r\n    <input\r\n      placeholder=\"Name\"\r\n      id=\"name-{exit.description}\"\r\n      type=\"text\"\r\n      bind:value=\"{exit.description}\"\r\n      style=\"margin:0; height: 2em;font-size: 14px;border-color:#ffffff33;\"\r\n    />\r\n  </td>\r\n  <td>\r\n    <div class=\"input-field\">\r\n      <input\r\n        type=\"text\"\r\n        id=\"autocomplete-input-{exit.name.replace(' ', '_')}\"\r\n        class=\"autocomplete targets\"\r\n        style=\"margin:0; height: 2em;font-size: 14px;border-color:#ffffff33;\"\r\n      />\r\n    </div>\r\n  </td>\r\n  <td>\r\n    <button\r\n      class=\"btn-flat waves-effect waves-light right\"\r\n      on:click=\"{() => deleteExit(exit)}\"\r\n    >\r\n      <i class=\"material-icons\" style=\"color:red;\">remove</i>\r\n    </button>\r\n  </td>\r\n</tr>\r\n",
    "<style>\r\n  .editor {\r\n    font-family: \"Source Code Pro\", monospace;\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n    height: 340px;\r\n    letter-spacing: normal;\r\n    line-height: 20px;\r\n    padding: 10px;\r\n    tab-size: 4;\r\n    background-color: #121212;\r\n  }\r\n  .body {\r\n    font-family: \"Source Code Pro\", monospace;\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n    height: 340px;\r\n    letter-spacing: normal;\r\n    line-height: 20px;\r\n    padding: 10px;\r\n    tab-size: 4;\r\n    background-color: #121212;\r\n  }\r\n  .result {\r\n    font-family: \"Source Code Pro\", monospace;\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n    height: 340px;\r\n    letter-spacing: normal;\r\n    line-height: 20px;\r\n    padding: 10px;\r\n    tab-size: 4;\r\n    color: #333;\r\n    background-color: #eee;\r\n  }\r\n</style>\r\n\r\n<script>\r\n  import { Router, Route, Link } from 'yrv';\r\n  import { writable } from \"svelte/store\";\r\n  import Toolbar from \"./Toolbar.svelte\";\r\n  import Sprites from \"./../game/Sprites.svelte\";\r\n  import { onMount } from \"svelte\";\r\n  import CRUDEditor from \"./CRUDEditor.svelte\";\r\n  import { createStore } from \"./CRUDEditorStore.js\";\r\n  import { v4 as uuidv4 } from \"uuid\";\r\n\r\n  import { CodeJar } from \"codejar\";\r\n  import { withLineNumbers } from \"codejar/linenumbers\";\r\n  import { createAuth, getAuth } from \"../auth.js\";\r\n  const { isAuthenticated, authToken } = getAuth();\r\n  $: state = {\r\n    isAuthenticated: $isAuthenticated,\r\n    authToken: $authToken.slice(0, 20),\r\n  };\r\n\r\n  import {\r\n    getScript,\r\n    deleteScript,\r\n    runScript,\r\n    getScripts,\r\n    updateScript,\r\n    createScript,\r\n    getScriptTypes,\r\n  } from \"../api/scripts.js\";\r\n\r\n  let jar;\r\n  let test;\r\n  let result;\r\n\r\n  const testBody = writable(\"{}\");\r\n\r\n  ///////// ADDITIONAL DATA\r\n  // additional data\r\n\r\n  let scriptTypes = [];\r\n\r\n  onMount(async () => {\r\n    getScriptTypes((t) => (scriptTypes = t));\r\n  });\r\n  /////////\r\n\r\n  const highlight = (editor) => {\r\n    editor.textContent = editor.textContent;\r\n    hljs.highlightBlock(editor);\r\n  };\r\n  const config = {\r\n    title: \"Manage Scripts\",\r\n    actions: [],\r\n    get: getScripts,\r\n    getElement: getScript,\r\n    create: createScript,\r\n    update: updateScript,\r\n    delete: deleteScript,\r\n    refreshUI: () => {\r\n      if ($store.selectedElement) {\r\n        if (jar === undefined) {\r\n          jar = CodeJar(\r\n            document.querySelector(\".editor\"),\r\n            withLineNumbers(highlight)\r\n          );\r\n          jar.onUpdate((code) => {\r\n            updateCode(code);\r\n          });\r\n          test = CodeJar(\r\n            document.querySelector(\".body\"),\r\n            withLineNumbers(highlight)\r\n          );\r\n          test.onUpdate((code) => {\r\n            testBody.set(code);\r\n          });\r\n\r\n          result = CodeJar(\r\n            document.querySelector(\".result\"),\r\n            withLineNumbers(highlight)\r\n          );\r\n        }\r\n\r\n        jar.updateCode($store.selectedElement.code);\r\n      }\r\n    },\r\n    hideDetails: true,\r\n    new: (select) => {\r\n      select({\r\n        id: uuidv4(),\r\n        name: \"New Script\",\r\n        description: \"something\",\r\n        code: \"console.log('Hello World from Script');\",\r\n        isNew: true,\r\n      });\r\n    },\r\n  };\r\n  // create store outside of the component to use it in the slot..\r\n  const store = createStore();\r\n  const runCode = () => {\r\n    runScript(\r\n      $authToken,\r\n      $store.selectedElement.id,\r\n      $testBody,\r\n      (r) => {\r\n        let obj = r.result;\r\n        result.updateCode(JSON.stringify(obj, null, 2));\r\n      },\r\n      () => {\r\n        console.log(\"update error.\");\r\n      }\r\n    );\r\n  };\r\n\r\n  const updateCode = (code) => {\r\n    store.update((state) => {\r\n      state.selectedElement.code = code;\r\n\r\n      return state;\r\n    });\r\n  };\r\n\r\n  onMount(async () => {});\r\n  /////////\r\n</script>\r\n\r\n<CRUDEditor store=\"{store}\" config=\"{config}\">\r\n\r\n  <div slot=\"content\">\r\n    <div class=\"row\">\r\n\r\n      <div class=\"margininput input-field col s5\">\r\n        <select bind:value=\"{$store.selectedElement.type}\" on:change>\r\n          <option value=\"\" disabled selected>Script Type</option>\r\n          {#each scriptTypes as type}\r\n            <option value=\"{type}\">{type.capitalize()}</option>\r\n          {/each}\r\n        </select>\r\n        <label>Select Script Type</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div slot=\"extensions\">\r\n    <div class=\"card-panel editor language-javascript\"></div>\r\n\r\n    <Toolbar\r\n      toolbar=\"{{ title: 'Testrunner', small: true, actions: [{ icon: 'play_arrow', fnc: () => runCode() }] }}\"\r\n    />\r\n\r\n    <div class=\"card z-depth-3\" style=\"background-color: #121212;\">\r\n      <div class=\"card-content language-javascript body col s6\">\r\n        {$testBody}\r\n      </div>\r\n      <div class=\"card-content language-javascript result col s6\"></div>\r\n    </div>\r\n  </div>\r\n\r\n</CRUDEditor>\r\n",
    "<style>\r\n  ul {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    /* width: 100%; */\r\n  }\r\n\r\n  ul li {\r\n    display: inline-block;\r\n    list-style: none;\r\n    color: #eee;\r\n  }\r\n\r\n  .btn-flat {\r\n    border: 1px #aaaaaa88 solid;\r\n    color: #eee;\r\n    border-radius: 4px;\r\n    margin: 5px;\r\n  }\r\n\r\n  .header {\r\n    font-weight: 500;\r\n    font-size: 200%;\r\n  }\r\n\r\n  .padding {\r\n    padding-right: 0.5em;\r\n    padding-left: 0.5em;\r\n    margin: 0;\r\n  }\r\n  .padding-small {\r\n    padding-left: 5px;\r\n  }\r\n\r\n  .header-small {\r\n    font-weight: 300;\r\n    font-size: 120%;\r\n\r\n    padding-right: 5px;\r\n  }\r\n\r\n  ul li:first-child {\r\n    margin-right: auto;\r\n  }\r\n</style>\r\n\r\n<script>\r\n  export let toolbar = {\r\n    title: \"TODO\",\r\n    small: false,\r\n    actions: [\r\n      {\r\n        name: \"Change Me\",\r\n        color: \"green\",\r\n        fnc: () => console.log(\"ACTION\"),\r\n      },\r\n    ],\r\n  };\r\n\r\n  const headerClass = () => {\r\n    if (toolbar.small) {\r\n      return \"header-small\";\r\n    }\r\n    return \"header\";\r\n  };\r\n  const headerPadding = () => {\r\n    if (toolbar.small) {\r\n      return \"padding-small\";\r\n    }\r\n    return \"padding\";\r\n  };\r\n  const headerDiv = () => {\r\n    if (toolbar.small) {\r\n      return \"\";\r\n    }\r\n    return \"row\";\r\n  };\r\n</script>\r\n\r\n<div class=\"{headerDiv()}\">\r\n  <ul class=\"{headerPadding()}\">\r\n    <li class=\"{headerClass()}\">{toolbar.title}</li>\r\n    {#each toolbar.actions as action}\r\n      <li>\r\n        <button class=\"btn-flat\" on:click=\"{action.fnc()}\">\r\n\r\n          {#if action.icon && action.name}\r\n            <i class=\"material-icons left\">{action.icon}</i>\r\n          {:else if action.icon}\r\n            <i class=\"material-icons center\">{action.icon}</i>\r\n          {/if}\r\n          {#if action.name}{action.name}{/if}\r\n\r\n        </button>\r\n      </li>\r\n    {/each}\r\n\r\n  </ul>\r\n</div>\r\n",
    "<style>\r\n  @media screen and (max-width: 480px) {\r\n    .gameContainer {\r\n      padding: 0em;\r\n      margin: auto auto;\r\n      max-width: 100%;\r\n      height: 95%;\r\n    }\r\n\r\n    #terminalWindow {\r\n      max-width: 640px;\r\n      height: 60%;\r\n      margin-top: 200px;\r\n      margin-left: auto;\r\n      margin-right: auto;\r\n\r\n      background: #000;\r\n      border-width: 1px;\r\n      border-style: solid;\r\n      border-color: #ffffff33;\r\n      border-radius: 0.5em;\r\n      position: relative;\r\n    }\r\n  }\r\n  @media screen and (min-width: 480px) {\r\n    .gameContainer {\r\n      padding: 1em;\r\n      margin: auto auto;\r\n      max-width: 900px;\r\n      height: 80%;\r\n    }\r\n\r\n    #terminalWindow {\r\n      max-width: 640px;\r\n      height: 60%;\r\n      margin-top: 280px;\r\n      margin-left: auto;\r\n      margin-right: auto;\r\n\r\n      background: #000;\r\n      border-width: 1px;\r\n      border-style: solid;\r\n      border-color: #ffffff33;\r\n      border-radius: 0.5em;\r\n      position: relative;\r\n    }\r\n  }\r\n\r\n  .roomImage {\r\n    background: #000;\r\n    border-width: 1px;\r\n    border-style: solid;\r\n    border-color: #ffffff33;\r\n    border-radius: 0.5em;\r\n\r\n    position: relative;\r\n  }\r\n\r\n  .roomImageInner {\r\n    width: 100%;\r\n    height: 420px;\r\n    background-repeat: no-repeat;\r\n    background-size: 100% auto;\r\n    border-radius: 0.5em;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    image-rendering: pixelated;\r\n    opacity: 1;\r\n    transition: opacity 0.6s;\r\n    z-index: 0;\r\n  }\r\n  .hidden {\r\n    opacity: 0;\r\n    transition: opacity 0.6s;\r\n  }\r\n\r\n  .roomImageGradient {\r\n    width: 100%;\r\n    height: 100%;\r\n    background-image: linear-gradient(\r\n      to bottom,\r\n      rgba(0, 0, 0, 0),\r\n      rgba(0, 0, 0, 0),\r\n      rgba(0, 0, 0, 0),\r\n      rgba(0, 0, 0, 0.2),\r\n      rgba(0, 0, 0, 0.8),\r\n      rgba(0, 0, 0, 1)\r\n    );\r\n  }\r\n\r\n  #terminal {\r\n    background: #000;\r\n    margin: 1em;\r\n    padding-bottom: 1em;\r\n    height: 95%;\r\n  }\r\n  #terminal2 {\r\n    background: #000;\r\n  }\r\n</style>\r\n\r\n<script>\r\n  import { writable } from \"svelte/store\";\r\n  import MUDXPlus from \"./MUDXPlus.svelte\";\r\n  import { createStore } from \"./MUDXPlusStore\";\r\n\r\n  import MediaQuery from \"../MediaQuery.svelte\";\r\n\r\n  import CharacterCreator from \"./../characters/CharacterCreator.svelte\";\r\n  import \"../../node_modules/xterm/css/xterm.css\";\r\n  import { onMount, onDestroy } from \"svelte\";\r\n  import { createAuth, getAuth } from \"../auth.js\";\r\n  import axios from \"axios\";\r\n  import xterm from \"xterm\";\r\n  import wrap from \"word-wrap\";\r\n\r\n  import LocalEchoController from \"./echo/LocalEchoController\";\r\n  import fit from \"xterm-addon-fit\";\r\n  import { createClient, getClient } from \"./Client\";\r\n  import { wsbackend } from \"../api/base.js\";\r\n  import UserMenu from \"../UserMenu.svelte\";\r\n\r\n  let toggleImage = true;\r\n\r\n  let client;\r\n  let term;\r\n  let ws;\r\n  const cols = writable(60);\r\n\r\n  const muxStore = createStore();\r\n  const muxClient = writable({});\r\n  let muxplus = true;\r\n\r\n  const { isAuthenticated, authToken } = getAuth();\r\n  $: state = {\r\n    isAuthenticated: $isAuthenticated,\r\n    authToken: $authToken.slice(0, 20),\r\n    background: $muxStore.background,\r\n  };\r\n\r\n  $: {\r\n    if (client && !ws) {\r\n      // connect to websocket server\r\n      const url = wsbackend + \"?access_token=\";\r\n      ws = new WebSocket(url + $authToken);\r\n      client.setWSClient(ws);\r\n    }\r\n\r\n    // set document background\r\n    document.body.style.backgroundImage =\r\n      \"url('/img/bg/\" + $muxStore.background + \".png')\";\r\n\r\n    let oldImg = document.querySelector(\r\n      toggleImage ? \"#roomImg1\" : \"#roomImg2\"\r\n    );\r\n    let newImg = document.querySelector(\r\n      !toggleImage ? \"#roomImg1\" : \"#roomImg2\"\r\n    );\r\n\r\n    toggleImage = !toggleImage;\r\n\r\n    if (newImg && oldImg) {\r\n      newImg.style.backgroundImage =\r\n        \"url('/img/bg/\" + $muxStore.background + \".png')\";\r\n\r\n      newImg.classList.remove(\"hidden\");\r\n      oldImg.classList.add(\"hidden\");\r\n\r\n      let terminal = document.querySelector(\"#terminalWindow\");\r\n      terminal.classList.add(\"hidden\");\r\n      terminal.classList.remove(\"hidden\");\r\n    }\r\n  }\r\n\r\n  $: background: {\r\n    console.log(\"BACKGROUND CHANGE\");\r\n  }\r\n\r\n  function sleep(ms) {\r\n    return new Promise((resolve) => setTimeout(resolve, ms));\r\n  }\r\n\r\n  function readLine(localEcho, term) {\r\n    localEcho\r\n      .read(\"~$ \")\r\n      .then((input) => {\r\n        client.onInput(input);\r\n        readLine(localEcho, term);\r\n      })\r\n      .catch((error) => console.log(`Error reading: ${error}`));\r\n  }\r\n\r\n  const createRenderer = (term, localEcho) => {\r\n    return (data) => {\r\n      localEcho.clearInput();\r\n\r\n      //term.writeln(wrap(data, { width: 62 }));\r\n      term.writeln(data);\r\n    };\r\n  };\r\n\r\n  const characterCreator = () => {\r\n    console.log(\"CREATE CHARACTER\");\r\n\r\n    var Modalelem = document.querySelector(\".modal\");\r\n    var instance = M.Modal.init(Modalelem);\r\n    instance.open();\r\n  };\r\n\r\n  async function setupTerminal() {\r\n    term = new xterm.Terminal();\r\n    term.onResize((c, rows) => {\r\n      cols.set(c);\r\n    });\r\n\r\n    var fitAddon = new fit.FitAddon();\r\n    term.loadAddon(fitAddon);\r\n    term.setOption(\"cursorBlink\", true);\r\n    term.setOption(\"convertEol\", true);\r\n\r\n    term.open(document.getElementById(\"terminal\"));\r\n    fitAddon.fit();\r\n\r\n    const localEcho = new LocalEchoController(term);\r\n    localEcho.addAutocompleteHandler(autocompleteCommonCommands);\r\n    client = createClient(\r\n      createRenderer(term, localEcho),\r\n      characterCreator,\r\n      muxStore\r\n    );\r\n\r\n    muxClient.set(client);\r\n\r\n    readLine(localEcho, term);\r\n  }\r\n\r\n  onMount(async () => {\r\n    // change global background<img src=\"/img/bg/oldtown-griphon.png\"/>\r\n\r\n    document.body.style.backgroundImage = \"url('/img/bg/oldtown-griphon.png')\";\r\n    document.body.style.backdropFilter =\r\n      \"blur(10px) saturate(30%) brightness(50%)\";\r\n\r\n    var nav = document.querySelector(\"nav\");\r\n    if (nav) {\r\n      nav.style.backgroundColor = \"#00000000\";\r\n      setupTerminal();\r\n    }\r\n  });\r\n\r\n  onDestroy(async () => {\r\n    // change global background\r\n    document.body.style.backgroundImage = \"\";\r\n    document.body.style.backdropFilter = \"\";\r\n\r\n    var nav = document.querySelector(\"nav\");\r\n    if (nav) {\r\n      nav.style.backgroundColor = \"#00000055\";\r\n      setupTerminal();\r\n    }\r\n  });\r\n\r\n  function autocompleteCommonCommands(index, tokens) {\r\n    if (index == 0) return [\"north\", \"east\", \"south\", \"west\", \"say\"];\r\n    return [];\r\n  }\r\n</script>\r\n\r\n<CharacterCreator />\r\n\r\n<div class=\"gameContainer\">\r\n  <div class=\"roomImage center-align z-depth-5\">\r\n\r\n    <div id=\"roomImg1\" class=\"roomImageInner center-align\">\r\n      <div class=\"roomImageGradient\"></div>\r\n    </div>\r\n    <div id=\"roomImg2\" class=\"roomImageInner center-align hidden\">\r\n      <div class=\"roomImageGradient\"></div>\r\n    </div>\r\n    <div id=\"terminalWindow\" class=\"z-depth-5\">\r\n      <div id=\"terminal\"></div>\r\n    </div>\r\n\r\n    <MUDXPlus\r\n      store=\"{muxStore}\"\r\n      term=\"{term}\"\r\n      sendMessage=\"{(msg) => {\r\n        client.sendMessage(msg);\r\n      }}\"\r\n    />\r\n  </div>\r\n\r\n</div>\r\n",
    "<style>\r\n  .mudx {\r\n    margin-top: 1em;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    margin-bottom: 1em;\r\n    max-width: 640px;\r\n  }\r\n\r\n  .inventory {\r\n    max-width: 600px;\r\n    max-height: 250px;\r\n\r\n    position: absolute;\r\n    top: 20px;\r\n    left: 100px;\r\n\r\n    z-index: 1003;\r\n    display: block;\r\n    opacity: 1;\r\n    overflow-y: auto;\r\n    transform: scaleX(1) scaleY(1);\r\n  }\r\n\r\n  .inventory ul {\r\n    border: none;\r\n    margin: 0.2em;\r\n  }\r\n\r\n  .inventory ul li:last-child {\r\n    border: 1px #ffffff55 solid;\r\n  }\r\n\r\n  .item {\r\n    background: #000000cc;\r\n    color: #fff;\r\n    border: 1px #ffffff55 solid;\r\n    margin: 0.2em;\r\n    border-radius: 5px;\r\n    justify-content: flex-start;\r\n    padding: 5px;\r\n  }\r\n\r\n  .item-header {\r\n    width: 200px;\r\n    max-width: 200px;\r\n    font-weight: bolder;\r\n    font-size: 13px;\r\n    word-wrap: break-word;\r\n    display: inline-block;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n  }\r\n  li img {\r\n    padding: 2px;\r\n    margin-right: 0.5em;\r\n    border-radius: 3px;\r\n    background: #00000044;\r\n    border: 1px solid #ffffff22;\r\n    image-rendering: pixelated;\r\n    height: 42px;\r\n    width: 42px;\r\n    float: left;\r\n  }\r\n\r\n  .actions {\r\n    border: 1px solid blue;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n\r\n  .ul2 {\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    margin: 0;\r\n    padding: 0;\r\n    margin-bottom: 0.5em;\r\n  }\r\n  .ul2 li {\r\n    display: inline-block;\r\n    list-style: none;\r\n    color: #eee;\r\n  }\r\n  .btncolor {\r\n    background: #00000000;\r\n    border: 1px solid #ffffff33;\r\n  }\r\n\r\n  .btn {\r\n    border-radius: 0.5em;\r\n    padding-left: 1em;\r\n    padding-right: 1em;\r\n    margin-left: 0.5em;\r\n  }\r\n</style>\r\n\r\n<script>\r\n  import Inventory from \"./ui/Inventory.svelte\";\r\n  import Sprites from \"./Sprites.svelte\";\r\n  import { writable } from \"svelte/store\";\r\n  import { getClient } from \"./Client\";\r\n\r\n  const showInventory = writable(false);\r\n  const showExits = writable(false);\r\n\r\n  const showActions = writable(false);\r\n  const showSkills = writable(false);\r\n\r\n  const hideAll = () => {\r\n    showInventory.set(false);\r\n    showExits.set(false);\r\n    showActions.set(false);\r\n    showSkills.set(false);\r\n  };\r\n  const toggleInventory = () => {\r\n    let show = !$showInventory;\r\n    hideAll();\r\n    showInventory.set(show);\r\n    /*\r\n    var Modalelem = document.getElementById(\"inventoryModal\");\r\n    var instance = M.Modal.init(Modalelem);\r\n     instance.open();\r\n     */\r\n  };\r\n  const toggleExits = () => {\r\n    let show = !$showExits;\r\n    hideAll();\r\n    showExits.set(show);\r\n  };\r\n  const toggleSkills = () => {\r\n    let show = !$showSkills;\r\n    hideAll();\r\n    showSkills.set(show);\r\n  };\r\n  const toggleActions = () => {\r\n    let show = !$showActions;\r\n    hideAll();\r\n    showActions.set(show);\r\n  };\r\n  export let store;\r\n  export let term;\r\n  export let sendMessage;\r\n\r\n  const takeExit = (exit) => {\r\n    console.log(\"Take exit \" + exit);\r\n\r\n    sendMessage(exit);\r\n  };\r\n</script>\r\n\r\n<Inventory />\r\n\r\n<div style=\"clear:both;\"></div>\r\n\r\n<div class=\"mudx\">\r\n\r\n  <button\r\n    class=\"btn waves-effect waves-light btncolor darken-1 right\"\r\n    on:click=\"{() => toggleInventory()}\"\r\n  >\r\n    <i class=\"material-icons\">inbox</i>\r\n  </button>\r\n\r\n  <button\r\n    class=\"btn waves-effect waves-light btncolor darken-1 left {$showExits === true ? 'orange' : ''}\"\r\n    style=\"margin-left:0;\"\r\n    on:click=\"{() => toggleExits()}\"\r\n  >\r\n    <i class=\"material-icons\">exit_to_app</i>\r\n  </button>\r\n\r\n  {#if $showExits === true}\r\n    <ul class=\"ul2 left\">\r\n      {#each $store.exits as exit}\r\n        {#if !exit.hidden}\r\n          <li style=\"margin-right: 5px;\">\r\n            <button\r\n              class=\"btn waves-effect waves-light btncolor darken-1 orange\"\r\n              on:click=\"{() => takeExit(exit.name)}\"\r\n            >\r\n              {exit.name}\r\n            </button>\r\n          </li>\r\n        {/if}\r\n      {/each}\r\n    </ul>\r\n  {/if}\r\n\r\n  {#if $store.actions.length > 0}\r\n    <button\r\n      class=\"btn waves-effect waves-light btncolor darken-1 left {$showActions === true ? 'blue' : ''}\"\r\n      on:click=\"{() => toggleActions()}\"\r\n    >\r\n      <i class=\"material-icons\">flare</i>\r\n    </button>\r\n\r\n    {#if $showActions === true}\r\n      <ul class=\"ul2\">\r\n        {#each $store.actions as action}\r\n          <li style=\"margin-right: 5px;\">\r\n            <button\r\n              class=\"btn waves-effect waves-light btncolor darken-1 blue\"\r\n              on:click=\"{() => takeExit(action.name)}\"\r\n            >\r\n              {action.name}\r\n            </button>\r\n          </li>\r\n        {/each}\r\n\r\n      </ul>\r\n    {/if}\r\n  {/if}\r\n\r\n  <button\r\n    class=\"btn waves-effect waves-light btncolor darken-1 left {$showSkills === true ? 'green' : ''}\"\r\n    on:click=\"{() => toggleSkills()}\"\r\n  >\r\n    <i class=\"material-icons\">brightness_7</i>\r\n  </button>\r\n  {#if $showSkills}\r\n    <ul class=\"ul2\">\r\n      <li style=\"margin-right: 5px;\">\r\n        <button\r\n          class=\"btn waves-effect waves-light btncolor darken-1 green\"\r\n          on:click=\"{() => takeExit('look')}\"\r\n        >\r\n          look\r\n        </button>\r\n      </li>\r\n\r\n    </ul>\r\n  {/if}\r\n\r\n  <div style=\"clear:both;\"></div>\r\n  {#if $showInventory === true}\r\n    <div class=\"inventory right-align\">\r\n      <ul class=\"collection\">\r\n        <li class=\"collection-item item left-align\">\r\n          <img src=\"img/sword.png\" alt=\"\" />\r\n\r\n          <span class=\"item-header\">\r\n            Sword of Long John Silver that never was\r\n          </span>\r\n          <br />\r\n          <span style=\"font-size:10px; color:orange;\">legendary sword</span>\r\n          <span style=\"font-size:10px; color:grey; float:right;\">\r\n            main hand\r\n          </span>\r\n\r\n          <p style=\"font-size:10px; margin: 0;\" class=\"center-align\">\r\n            +10 Dex / +5 Str / +7 Stam\r\n          </p>\r\n          <p\r\n            style=\"margin: 0; font-size:10px; color:grey; font-style:italic;\"\r\n            class=\"center-align\"\r\n          >\r\n            He never needed it anyway so i took it\r\n          </p>\r\n        </li>\r\n\r\n        {#each Array(10) as _, i}\r\n          <li class=\"collection-item item left-align\">\r\n            <img src=\"img/sword.png\" alt=\"\" />\r\n\r\n            <span class=\"item-header\">Sturdy Iron Helmet</span>\r\n            <br />\r\n            <span style=\"font-size:10px; color:purple;\">epic helmet</span>\r\n            <span style=\"font-size:10px; color:grey; float:right;\">head</span>\r\n\r\n            <p style=\"font-size:10px; margin: 0;\" class=\"center-align\">\r\n              +5 Dex / +20 Str / +3 Stam\r\n            </p>\r\n            <p\r\n              style=\"margin: 0; font-size:10px; color:grey; font-style:italic;\r\n              max-width: 250px; line-height:95%;\"\r\n              class=\"center-align\"\r\n            >\r\n              The person this belonged to had probably a very tiny head, not\r\n              sure how he ever fitted into it\r\n            </p>\r\n          </li>\r\n        {/each}\r\n        }\r\n      </ul>\r\n    </div>\r\n  {/if}\r\n\r\n</div>\r\n",
    "<style>\r\n  h2 {\r\n    overflow: hidden;\r\n    position: relative;\r\n    width: 16px;\r\n    height: 16px;\r\n    \r\n  }\r\n  h2 img {\r\n    position: relative;\r\n  }\r\n  h2.weapon img {\r\n    top: 0px;\r\n    left: -32px;\r\n  }\r\n  h2.shield img {\r\n    top: -64;\r\n    left: -128px;\r\n  }\r\n</style>\r\n\r\n<script>\r\n  export let item = \"weapon\";\r\n</script>\r\n\r\n<h2 class=\"{item}\">\r\n  <img src=\"img/sword.png\" alt=\"\" />\r\n</h2>\r\n",
    "<style>\r\n  .modal {\r\n    background-color: #000000aa;\r\n    color: #eee;\r\n       border-width: 1px;\r\n    border-style: solid;\r\n    border-color: #ffffff33;\r\n    border-radius: 0.5em;\r\n    padding: 1em;\r\n    width: 50%;\r\n  }\r\n  .modal-content {\r\n    padding: 0;\r\n  }\r\n\r\n  .modal-footer {\r\n        background-color: #000000ee;\r\n\r\n  }\r\n\r\n  .inventory {\r\npadding: 0;\r\n\r\n  }\r\n\r\n  .inventory ul {\r\n    border: none;\r\n    margin: 1em;\r\n  }\r\n\r\n  .inventory ul li:last-child {\r\n    border: 1px #ffffff55 solid;\r\n  }\r\n\r\n  .item {\r\n    background: #000000cc;\r\n    color: #fff;\r\n    border: 1px #ffffff55 solid;\r\n    margin: 0.5em;\r\n    border-radius: 5px;\r\n    justify-content: flex-start;\r\n    padding: 5px;\r\n  }\r\n\r\n  .item-header {\r\n    width: 200px;\r\n    max-width: 200px;\r\n    font-weight: bolder;\r\n    font-size: 13px;\r\n    word-wrap: break-word;\r\n    display: inline-block;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n  }\r\n  li img {\r\n    padding: 2px;\r\n    margin-right: 0.5em;\r\n    border-radius: 3px;\r\n    background: #00000044;\r\n    border: 1px solid #ffffff22;\r\n    image-rendering: pixelated;\r\n    height: 42px;\r\n    width: 42px;\r\n    float: left;\r\n  }\r\n</style>\r\n\r\n<script>\r\n  import { onMount } from \"svelte\";\r\n  import { writable } from \"svelte/store\";\r\n\r\n  onMount(async () => {\r\n    document.addEventListener(\"DOMContentLoaded\", function () {\r\n      var elems = document.querySelectorAll(\".modal\");\r\n      var instances = M.Modal.init(elems, {});\r\n    });\r\n  });\r\n\r\n  const templates = writable([]);\r\n</script>\r\n\r\n<!-- Modal Structure -->\r\n<div id=\"inventoryModal\" class=\"modal\">\r\n  <div class=\"modal-content\">\r\n    <h4>Inventory</h4>\r\n\r\n    <div class=\"inventory right-align\">\r\n      <ul class=\"collection\">\r\n        <li class=\"collection-item item left-align\">\r\n          <img src=\"img/sword.png\" alt=\"\" />\r\n\r\n          <span class=\"item-header\">\r\n            Sword of Long John Silver that never was\r\n          </span>\r\n          <br />\r\n          <span style=\"font-size:10px; color:orange;\">legendary sword</span>\r\n          <span style=\"font-size:10px; color:grey; float:right;\">\r\n            main hand\r\n          </span>\r\n\r\n          <p style=\"font-size:10px; margin: 0;\" class=\"center-align\">\r\n            +10 Dex / +5 Str / +7 Stam\r\n          </p>\r\n          <p\r\n            style=\"margin: 0; font-size:10px; color:grey; font-style:italic;\"\r\n            class=\"center-align\"\r\n          >\r\n            He never needed it anyway so i took it\r\n          </p>\r\n        </li>\r\n\r\n        {#each Array(10) as _, i}\r\n          <li class=\"collection-item item left-align\">\r\n            <img src=\"img/sword.png\" alt=\"\" />\r\n\r\n            <span class=\"item-header\">Sturdy Iron Helmet</span>\r\n            <br />\r\n            <span style=\"font-size:10px; color:purple;\">epic helmet</span>\r\n            <span style=\"font-size:10px; color:grey; float:right;\">head</span>\r\n\r\n            <p style=\"font-size:10px; margin: 0;\" class=\"center-align\">\r\n              +5 Dex / +20 Str / +3 Stam\r\n            </p>\r\n            <p\r\n              style=\"margin: 0; font-size:10px; color:grey; font-style:italic;\r\n              max-width: 250px; line-height:95%;\"\r\n              class=\"center-align\"\r\n            >\r\n              The person this belonged to had probably a very tiny head, not\r\n              sure how he ever fitted into it\r\n            </p>\r\n          </li>\r\n        {/each}\r\n\r\n      </ul>\r\n    </div>\r\n\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button href=\"#!\" class=\"modal-close waves-effect waves-red btn\">\r\n      Close\r\n    </button>\r\n    <button href=\"#!\" class=\"modal-close waves-effect waves-green btn\">\r\n      Drop\r\n    </button>\r\n  </div>\r\n</div>\r\n"
  ],
  "names": [],
  "mappings": "AAwGE,CAAC,YAAY,eAAE,CACb,KAAK,CAAE,GACT;ACTA,CAAC,YAAY,eAAE,CACb,MAAM,CAAE,GAAG,CAAC,MAAM,CAAC,MACrB;AClGQ,IAAM,CACZ,gBAAgB,CAAE,OAAO,CACzB,UAAU,CAAE,gBAAgB,CAAC,IAAI,CACjC,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,OAAO,CAAE,GAAG,CACZ,KAAK,CAAE,OAAO,CAKd,MAAM,CAAE,IAAI,CAEZ,mBAAmB,CAAE,MAAM,CAC3B,iBAAiB,CAAE,SAAS,CAC5B,eAAe,CAAE,KAAK,CACtB,eAAe,CAAE,IAAI,CACrB,oBAAoB,CAAE,IACxB,CACQ,MAAQ,CACd,eAAe,CAAE,IACnB,CACQ,KAAO,CACb,KAAK,CAAE,OACT,CACQ,CAAG,CACT,KAAK,CAAE,OAAO,CAEd,eAAe,CAAE,IACnB,CACQ,OAAS,CACf,eAAe,CAAE,IACnB,CACA,yBAAY,CACV,WAAW,CAAE,GAAG,CAChB,YAAY,CAAE,GAChB,CACA,0BAAa,CACX,YAAY,CAAE,KAChB,CAEQ,SAAW,CACjB,eAAe,CAAE,IAAI,CACrB,oBAAoB,CAAE,IAAI,CAC1B,KAAK,CAAE,IACT,CACA,iBAAI,CACF,UAAU,CAAE,SACd,CACA,iBAAI,CACF,aAAa,CAAE,GACjB;ACjDF,kBAAI,CACA,UAAU,CAAE,OAAO,CAAC,UACxB;ACGE,oBAAM,CACJ,KAAK,CAAE,IACT,CACA,qBAAO,CACL,KAAK,CAAE,IACT,CACA,0BAAY,CACV,KAAK,CAAE,IACT;ACdA,0BAAY,CACV,YAAY,CAAE,GAChB,CAEA,yBAAW,CACT,KAAK,CAAE,IACT,CAEA,mBAAK,CACH,KAAK,CAAE,IACT;ACVA,wBAAW,CACT,KAAK,CAAE,WACT,CACA,sBAAS,CACP,OAAO,CAAE,GACX,CAKA,mBAAM,CACJ,aAAa,CAAE,KAAK,CACpB,eAAe,CAAE,SACnB,CAEA,iCAAoB,CAClB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,GACV,CACA,4BAAe,CACb,gBAAgB,CAAE,SAAS,CAC3B,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,SAAS,CAC3B,aAAa,CAAE,GAAG,CAClB,OAAO,CAAE,KACX;ACxBA,oBAAO,CACL,gBAAgB,CAAE,aACpB,CAEA,mBAAM,CACJ,KAAK,CAAE,IACT;ACNA,mBAAK,CACH,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,GAAG,CACX,eAAe,CAAE,SACnB,CACA,6BAAe,CACb,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,CACb,MAAM,CAAE,GACV,CACA,0BAAY,CACV,SAAS,CAAE,IACb;ACbA,kBAAK,CACH,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,GAAG,CACX,eAAe,CAAE,SACnB,CACA,4BAAe,CACb,KAAK,CAAE,KACT,CAEA,gBAAG,CACD,OAAO,CAAE,GACX;ACZA,kCAAoB,CAClB,gBAAgB,CAAE,WACpB,CACA,gCAAkB,CAChB,OAAO,CAAE,GAAG,CACZ,MAAM,CAAE,GACV,CACA,oBAAM,CACJ,KAAK,CAAE,IACT,CACA,oBAAM,CACJ,KAAK,CAAE,KACT,CACA,oBAAK,SAAU,CACb,KAAK,CAAE,KACT;ACfA,uBAAU,CACR,KAAK,CAAE,IACT,CACA,sBAAS,CACP,KAAK,CAAE,KAAK,CACZ,UAAU,CAAE,GACd,CACA,qBAAQ,CACN,KAAK,CAAE,KAAK,CAAC,UAAU,CACvB,OAAO,CAAE,CAAC,CACV,MAAM,CAAE,CACV,CACA,yBAAY,CACV,MAAM,CAAE,GAAG,CAAC,MAAM,CAAC,MACrB,CACA,yBAAY,CACV,cAAc,CAAE,CAAC,CACjB,aAAa,CAAE,CACjB,CACA,uBAAU,CACR,gBAAgB,CAAE,OAAO,CACzB,aAAa,CAAE,GAAG,CAClB,KAAK,CAAE,OAAO,CACd,OAAO,CAAE,GAAG,CACZ,KAAK,CAAE,IAAI,CACX,aAAa,CAAE,QACjB,CAEA,mBAAM,CACJ,KAAK,CAAE,KACT,CACQ,KAAO,CACb,KAAK,CAAE,IACT,CACA,0BAAa,CACX,WAAW,CAAE,KAAK,CAClB,YAAY,CAAE,KAChB,CACA,mBAAK,SAAU,CACb,KAAK,CAAE,KACT,CACA,yBAAY,CACV,OAAO,CAAE,CACX,CAEA,0BAAa,CACX,SAAS,CAAE,WAAW,KAAK,CAAC,CAAC,WAAW,KAAK,CAAC,CAAC,MAAM,GAAG,CAC1D,CAEA,wBAAW,CACT,YAAY,CAAE,KAAK,CACnB,WAAW,CAAE,KACf,CAEA,8BAAiB,CACf,KAAK,CAAE,IACT,CACA,yBAAY,CACV,KAAK,CAAE,IACT,CAEA,mCAAsB,CACpB,aAAa,CAAE,IACjB,CACA,qBAAQ,CACN,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,GACf,CACA,qBAAQ,CACN,KAAK,CAAE,IACT,CACA,mBAAM,CACJ,KAAK,CAAE,OACT;AC9DA,gBAAG,CACD,OAAO,CAAE,GACX,CAIA,mBAAM,CACJ,KAAK,CAAE,KACT,CACA,mBAAK,SAAU,CACb,KAAK,CAAE,KACT;ACtBA,sBAAQ,CACN,WAAW,CAAE,iBAAiB,CAAC,CAAC,SAAS,CACzC,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,GAAG,CAChB,MAAM,CAAE,KAAK,CACb,cAAc,CAAE,MAAM,CACtB,WAAW,CAAE,IAAI,CACjB,OAAO,CAAE,IAAI,CACb,QAAQ,CAAE,CAAC,CACX,gBAAgB,CAAE,OACpB,CACA,oBAAM,CACJ,WAAW,CAAE,iBAAiB,CAAC,CAAC,SAAS,CACzC,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,GAAG,CAChB,MAAM,CAAE,KAAK,CACb,cAAc,CAAE,MAAM,CACtB,WAAW,CAAE,IAAI,CACjB,OAAO,CAAE,IAAI,CACb,QAAQ,CAAE,CAAC,CACX,gBAAgB,CAAE,OACpB,CACA,sBAAQ,CACN,WAAW,CAAE,iBAAiB,CAAC,CAAC,SAAS,CACzC,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,GAAG,CAChB,MAAM,CAAE,KAAK,CACb,cAAc,CAAE,MAAM,CACtB,WAAW,CAAE,IAAI,CACjB,OAAO,CAAE,IAAI,CACb,QAAQ,CAAE,CAAC,CACX,KAAK,CAAE,IAAI,CACX,gBAAgB,CAAE,IACpB;ACjCA,8BAAG,CACD,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,QAAQ,CACzB,cAAc,CAAE,GAAG,CACnB,WAAW,CAAE,MAEf,CAEA,gBAAE,CAAC,gBAAG,CACJ,OAAO,CAAE,YAAY,CACrB,UAAU,CAAE,IAAI,CAChB,KAAK,CAAE,IACT,CAEA,qCAAU,CACR,MAAM,CAAE,GAAG,CAAC,SAAS,CAAC,KAAK,CAC3B,KAAK,CAAE,IAAI,CACX,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,GACV,CAEA,mCAAQ,CACN,WAAW,CAAE,GAAG,CAChB,SAAS,CAAE,IACb,CAEA,oCAAS,CACP,aAAa,CAAE,KAAK,CACpB,YAAY,CAAE,KAAK,CACnB,MAAM,CAAE,CACV,CACA,0CAAe,CACb,YAAY,CAAE,GAChB,CAEA,yCAAc,CACZ,WAAW,CAAE,GAAG,CAChB,SAAS,CAAE,IAAI,CAEf,aAAa,CAAE,GACjB,CAEA,gBAAE,CAAC,gBAAE,YAAa,CAChB,YAAY,CAAE,IAChB;AC5CA,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,KAAK,CAAE,CACnC,6BAAe,CACb,OAAO,CAAE,GAAG,CACZ,MAAM,CAAE,IAAI,CAAC,IAAI,CACjB,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,GACV,CAEA,8BAAgB,CACd,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CACX,UAAU,CAAE,KAAK,CACjB,WAAW,CAAE,IAAI,CACjB,YAAY,CAAE,IAAI,CAElB,UAAU,CAAE,IAAI,CAChB,YAAY,CAAE,GAAG,CACjB,YAAY,CAAE,KAAK,CACnB,YAAY,CAAE,SAAS,CACvB,aAAa,CAAE,KAAK,CACpB,QAAQ,CAAE,QACZ,CACF,CACA,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,KAAK,CAAE,CACnC,6BAAe,CACb,OAAO,CAAE,GAAG,CACZ,MAAM,CAAE,IAAI,CAAC,IAAI,CACjB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GACV,CAEA,8BAAgB,CACd,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CACX,UAAU,CAAE,KAAK,CACjB,WAAW,CAAE,IAAI,CACjB,YAAY,CAAE,IAAI,CAElB,UAAU,CAAE,IAAI,CAChB,YAAY,CAAE,GAAG,CACjB,YAAY,CAAE,KAAK,CACnB,YAAY,CAAE,SAAS,CACvB,aAAa,CAAE,KAAK,CACpB,QAAQ,CAAE,QACZ,CACF,CAEA,yBAAW,CACT,UAAU,CAAE,IAAI,CAChB,YAAY,CAAE,GAAG,CACjB,YAAY,CAAE,KAAK,CACnB,YAAY,CAAE,SAAS,CACvB,aAAa,CAAE,KAAK,CAEpB,QAAQ,CAAE,QACZ,CAEA,8BAAgB,CACd,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,KAAK,CACb,iBAAiB,CAAE,SAAS,CAC5B,eAAe,CAAE,IAAI,CAAC,IAAI,CAC1B,aAAa,CAAE,KAAK,CACpB,QAAQ,CAAE,QAAQ,CAClB,IAAI,CAAE,CAAC,CACP,GAAG,CAAE,CAAC,CACN,eAAe,CAAE,SAAS,CAC1B,OAAO,CAAE,CAAC,CACV,UAAU,CAAE,OAAO,CAAC,IAAI,CACxB,OAAO,CAAE,CACX,CACA,sBAAQ,CACN,OAAO,CAAE,CAAC,CACV,UAAU,CAAE,OAAO,CAAC,IACtB,CAEA,iCAAmB,CACjB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE;AACtB,MAAM,EAAE,CAAC,MAAM,CAAC;AAChB,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACzB,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACzB,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,KACE,CAEA,wBAAU,CACR,UAAU,CAAE,IAAI,CAChB,MAAM,CAAE,GAAG,CACX,cAAc,CAAE,GAAG,CACnB,MAAM,CAAE,GACV;AC/FA,kDAAM,CACJ,UAAU,CAAE,GAAG,CACf,WAAW,CAAE,IAAI,CACjB,YAAY,CAAE,IAAI,CAClB,aAAa,CAAE,GAAG,CAClB,SAAS,CAAE,KACb,CAEA,uDAAW,CACT,SAAS,CAAE,KAAK,CAChB,UAAU,CAAE,KAAK,CAEjB,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,IAAI,CACT,IAAI,CAAE,KAAK,CAEX,OAAO,CAAE,IAAI,CACb,OAAO,CAAE,KAAK,CACd,OAAO,CAAE,CAAC,CACV,UAAU,CAAE,IAAI,CAChB,SAAS,CAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAC/B,CAEA,yBAAU,CAAC,gCAAG,CACZ,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,KACV,CAEA,yBAAU,CAAC,iBAAE,CAAC,iBAAE,WAAY,CAC1B,MAAM,CAAE,GAAG,CAAC,SAAS,CAAC,KACxB,CAEA,kDAAM,CACJ,UAAU,CAAE,SAAS,CACrB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,GAAG,CAAC,SAAS,CAAC,KAAK,CAC3B,MAAM,CAAE,KAAK,CACb,aAAa,CAAE,GAAG,CAClB,eAAe,CAAE,UAAU,CAC3B,OAAO,CAAE,GACX,CAEA,yDAAa,CACX,KAAK,CAAE,KAAK,CACZ,SAAS,CAAE,KAAK,CAChB,WAAW,CAAE,MAAM,CACnB,SAAS,CAAE,IAAI,CACf,SAAS,CAAE,UAAU,CACrB,OAAO,CAAE,YAAY,CACrB,QAAQ,CAAE,MAAM,CAChB,WAAW,CAAE,MAAM,CACnB,aAAa,CAAE,QACjB,CACA,iBAAE,CAAC,iCAAI,CACL,OAAO,CAAE,GAAG,CACZ,YAAY,CAAE,KAAK,CACnB,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,SAAS,CACrB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,SAAS,CAC3B,eAAe,CAAE,SAAS,CAC1B,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,KAAK,CAAE,IACT,CAQA,iDAAK,CACH,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,UAAU,CAC3B,cAAc,CAAE,GAAG,CACnB,WAAW,CAAE,MAAM,CACnB,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,CAAC,CACV,aAAa,CAAE,KACjB,CACA,mBAAI,CAAC,gCAAG,CACN,OAAO,CAAE,YAAY,CACrB,UAAU,CAAE,IAAI,CAChB,KAAK,CAAE,IACT,CACA,sDAAU,CACR,UAAU,CAAE,SAAS,CACrB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,SACpB,CAEA,iDAAK,CACH,aAAa,CAAE,KAAK,CACpB,YAAY,CAAE,GAAG,CACjB,aAAa,CAAE,GAAG,CAClB,WAAW,CAAE,KACf;AC/FA,8BAAG,CACD,QAAQ,CAAE,MAAM,CAChB,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAEV,CACA,gBAAE,CAAC,iBAAI,CACL,QAAQ,CAAE,QACZ,CACA,EAAE,qBAAO,CAAC,iBAAI,CACZ,GAAG,CAAE,GAAG,CACR,IAAI,CAAE,KACR,CACA,EAAE,qBAAO,CAAC,iBAAI,CACZ,GAAG,CAAE,GAAG,CACR,IAAI,CAAE,MACR;ACjBA,kCAAO,CACL,gBAAgB,CAAE,SAAS,CAC3B,KAAK,CAAE,IAAI,CACR,YAAY,CAAE,GAAG,CACpB,YAAY,CAAE,KAAK,CACnB,YAAY,CAAE,SAAS,CACvB,aAAa,CAAE,KAAK,CACpB,OAAO,CAAE,GAAG,CACZ,KAAK,CAAE,GACT,CACA,0CAAe,CACb,OAAO,CAAE,CACX,CAEA,yCAAc,CACR,gBAAgB,CAAE,SAExB,CAEA,sCAAW,CACb,OAAO,CAAE,CAEP,CAEA,wBAAU,CAAC,gBAAG,CACZ,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,GACV,CAEA,wBAAU,CAAC,EAAE,CAAC,gBAAE,WAAY,CAC1B,MAAM,CAAE,GAAG,CAAC,SAAS,CAAC,KACxB,CAEA,iCAAM,CACJ,UAAU,CAAE,SAAS,CACrB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,GAAG,CAAC,SAAS,CAAC,KAAK,CAC3B,MAAM,CAAE,KAAK,CACb,aAAa,CAAE,GAAG,CAClB,eAAe,CAAE,UAAU,CAC3B,OAAO,CAAE,GACX,CAEA,wCAAa,CACX,KAAK,CAAE,KAAK,CACZ,SAAS,CAAE,KAAK,CAChB,WAAW,CAAE,MAAM,CACnB,SAAS,CAAE,IAAI,CACf,SAAS,CAAE,UAAU,CACrB,OAAO,CAAE,YAAY,CACrB,QAAQ,CAAE,MAAM,CAChB,WAAW,CAAE,MAAM,CACnB,aAAa,CAAE,QACjB,CACA,gBAAE,CAAC,iBAAI,CACL,OAAO,CAAE,GAAG,CACZ,YAAY,CAAE,KAAK,CACnB,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,SAAS,CACrB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,SAAS,CAC3B,eAAe,CAAE,SAAS,CAC1B,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,KAAK,CAAE,IACT"
}